{"version":3,"sources":["webpack:///../src/YBasic/YModal/YModal.js?39f3","webpack:///../YModal.mdx","webpack:///../src/YBasic/YModal/YModal.js"],"names":["_frontmatter","layoutProps","MDXLayout","DefaultLayout","MDXContent","components","props","mdxType","__position","__code","__scope","Playground","YModal","YButtonPrimary","State","Observe","SourceDisplay","source","initialState","count","setState","YButton","onClick","s","childStyle","width","Array","fill","map","_","i","key","style","position","height","zIndex","isMDXComponent","ThemableYModal","globalTheme","defaultStyle","defaultChildStyle","defaultClassName","defaultChildClassName","excludeComponentDefaultClassName","excludeComponentDefaultChildClassName","propClassName","className","propChildClassName","childClassName","children","catClassName","Object"],"mappings":"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","file":"component---y-modal-mdx-3edf826d41a5d9354626.js","sourcesContent":["export default \"import React from 'react';\\nimport { catClassName } from '../../util.js';\\nimport './YModal.css';\\n\\nconst YModalDefaultClassName = 'y y-modal';\\nconst YModalDefaultChildClassName = 'y y-modal-content'\\n\\nexport const ThemableYModal = (globalTheme = {}) => {\\n\\n    const {\\n        defaultStyle={},\\n        defaultChildStyle={}, \\n        defaultClassName='',\\n        defaultChildClassName='',\\n        excludeComponentDefaultClassName=false,\\n        excludeComponentDefaultChildClassName=false\\n    } = ((globalTheme.YBasic || {}).YTable || {});\\n\\n    return ({\\n        style = {},\\n        childStyle = {},\\n        \\n        className: propClassName,\\n        childClassName: propChildClassName,\\n        \\n        children,\\n        \\n        ...props\\n    }) => {\\n        return (\\n            <div\\n                className={catClassName(\\n                    (excludeComponentDefaultClassName ? '' : YModalDefaultClassName),\\n                    defaultClassName,\\n                    propClassName\\n                )}\\n                style={Object.assign({}, defaultStyle, style)}\\n                {...props}\\n            >\\n                <div\\n                    className={catClassName(\\n                        (excludeComponentDefaultChildClassName ? '' : YModalDefaultChildClassName),\\n                        defaultChildClassName,\\n                        propChildClassName\\n                    )}\\n                    style={Object.assign({}, defaultChildStyle, childStyle)}\\n                >\\n                    {children}\\n                </div>\\n            </div>\\n        );\\n    }\\n    \\n}\\n\\nconst YModal = ThemableYModal();\\nexport default YModal;\"","import React from 'react'\n  /* @jsx mdx */\nimport { mdx } from '@mdx-js/react';\n/* @jsx mdx */\n\nimport DefaultLayout from \"/Users/thomas.coladonato/yeet-components/node_modules/gatsby-theme-docz/src/base/Layout.js\";\nimport { Playground } from 'docz';\nimport YModal from './src/YBasic/YModal/YModal.js';\nimport { YButtonPrimary } from './src/YBasic/YButton/YButton.js';\nimport { State, Observe } from \"mdx-observable\";\nimport SourceDisplay from './SourceDisplay';\nimport source from '!!raw-loader!./src/YBasic/YModal/YModal.js';\nexport const _frontmatter = {};\n\nconst makeShortcode = name => function MDXDefaultShortcode(props) {\n  console.warn(\"Component \" + name + \" was not imported, exported, or provided by MDXProvider as global scope\");\n  return <div {...props} />;\n};\n\nconst layoutProps = {\n  _frontmatter\n};\nconst MDXLayout = DefaultLayout;\nexport default function MDXContent({\n  components,\n  ...props\n}) {\n  return <MDXLayout {...layoutProps} {...props} components={components} mdxType=\"MDXLayout\">\n\n\n\n    <h1 {...{\n      \"id\": \"ymodal\"\n    }}>{`YModal`}</h1>\n    <hr></hr>\n    <h2 {...{\n      \"id\": \"position-fixed\"\n    }}>{`position: fixed;`}</h2>\n    <h3 {...{\n      \"id\": \"position-fixed-default\"\n    }}>{`position: fixed (default)`}</h3>\n    <Playground __position={0} __code={'<State initialState={{ count: false }}>\\n  <Observe>\\n    {({ count, setState }) => (\\n      <>\\n        <YButtonPrimary onClick={() => setState(s => ({ count: true }))}>\\n          Click me\\n        </YButtonPrimary>\\n        {count && (\\n          <YModal>\\n            Hello, I am a basic modal, close me with{\\' \\'}\\n            <YButtonPrimary onClick={() => setState(s => ({ count: false }))}>\\n              this button\\n            </YButtonPrimary>\\n          </YModal>\\n        )}\\n      </>\\n    )}\\n  </Observe>\\n</State>'} __scope={{\n      props,\n      DefaultLayout,\n      Playground,\n      YModal,\n      YButtonPrimary,\n      State,\n      Observe,\n      SourceDisplay,\n      source\n    }} mdxType=\"Playground\">\n      <State initialState={{\n        count: false\n      }} mdxType=\"State\">\n        <Observe mdxType=\"Observe\">\n          {({\n            count,\n            setState\n          }) => <>\n\t\t<YButtonPrimary onClick={() => setState(s => ({\n              count: true\n            }))} mdxType=\"YButtonPrimary\">\n\t\tClick me\n\t\t</YButtonPrimary>\n\t\t{count && <YModal mdxType=\"YModal\">Hello, I am a basic modal, close me with <YButtonPrimary onClick={() => setState(s => ({\n                count: false\n              }))} mdxType=\"YButtonPrimary\">this button</YButtonPrimary></YModal>}\n\t</>}\n        </Observe>\n      </State>\n    </Playground>\n    <h3 {...{\n      \"id\": \"position-fixed-default-with-width-fit-content\"\n    }}>{`position: fixed (default) with width: fit-content`}</h3>\n    <Playground __position={1} __code={'<State initialState={{ count: false }}>\\n  <Observe>\\n    {({ count, setState }) => (\\n      <>\\n        <YButtonPrimary onClick={() => setState(s => ({ count: true }))}>\\n          Click me\\n        </YButtonPrimary>\\n        {count && (\\n          <YModal childStyle={{ width: \\'fit-content\\' }}>\\n            Hello, I am a basic modal, close me with{\\' \\'}\\n            <YButtonPrimary onClick={() => setState(s => ({ count: false }))}>\\n              this button\\n            </YButtonPrimary>\\n          </YModal>\\n        )}\\n      </>\\n    )}\\n  </Observe>\\n</State>'} __scope={{\n      props,\n      DefaultLayout,\n      Playground,\n      YModal,\n      YButtonPrimary,\n      State,\n      Observe,\n      SourceDisplay,\n      source\n    }} mdxType=\"Playground\">\n      <State initialState={{\n        count: false\n      }} mdxType=\"State\">\n        <Observe mdxType=\"Observe\">\n          {({\n            count,\n            setState\n          }) => <>\n\t\t<YButtonPrimary onClick={() => setState(s => ({\n              count: true\n            }))} mdxType=\"YButtonPrimary\">\n\t\tClick me\n\t\t</YButtonPrimary>\n\t\t{count && <YModal childStyle={{\n              width: 'fit-content'\n            }} mdxType=\"YModal\">Hello, I am a basic modal, close me with <YButtonPrimary onClick={() => setState(s => ({\n                count: false\n              }))} mdxType=\"YButtonPrimary\">this button</YButtonPrimary></YModal>}\n\t</>}\n        </Observe>\n      </State>\n    </Playground>\n    <h2 {...{\n      \"id\": \"position-fixed-default-with-height-overflow\"\n    }}>{`position: fixed (default) with height overflow`}</h2>\n    <Playground __position={2} __code={'<State initialState={{ count: false }}>\\n  <Observe>\\n    {({ count, setState }) => (\\n      <>\\n        <YButtonPrimary onClick={() => setState(s => ({ count: true }))}>\\n          Click me\\n        </YButtonPrimary>\\n        {count && (\\n          <YModal>\\n            Hello, I am a basic modal,\\n            <div>\\n              {Array(100)\\n                .fill()\\n                .map((_, i) => (\\n                  <span key={\\'key\\' + i}>and I\\'m just way too verbose</span>\\n                ))}\\n            </div>\\n            {Array(100)\\n              .fill()\\n              .map((_, i) => (\\n                <div key={\\'key\\' + i}>and I\\'m just way too verbose</div>\\n              ))}\\n            , close me with\\n            <YButtonPrimary onClick={() => setState(s => ({ count: false }))}>\\n              this button\\n            </YButtonPrimary>\\n          </YModal>\\n        )}\\n      </>\\n    )}\\n  </Observe>\\n</State>'} __scope={{\n      props,\n      DefaultLayout,\n      Playground,\n      YModal,\n      YButtonPrimary,\n      State,\n      Observe,\n      SourceDisplay,\n      source\n    }} mdxType=\"Playground\">\n      <State initialState={{\n        count: false\n      }} mdxType=\"State\">\n        <Observe mdxType=\"Observe\">\n          {({\n            count,\n            setState\n          }) => <>\n\t\t<YButtonPrimary onClick={() => setState(s => ({\n              count: true\n            }))} mdxType=\"YButtonPrimary\">\n\t\tClick me\n\t\t</YButtonPrimary>\n\t\t{count && <YModal mdxType=\"YModal\">\n\t\t\tHello, I am a basic modal,\n\t\t\t<div>\n\t\t\t\t{Array(100).fill().map((_, i) => <span key={'key' + i}>and I'm just way too verbose</span>)}\n\t\t\t</div>\n\t\t\t{Array(100).fill().map((_, i) => <div key={'key' + i}>and I'm just way too verbose</div>)}\n\t\t\t, close me with\n\t\t\t\n\t\t\t<YButtonPrimary onClick={() => setState(s => ({\n                count: false\n              }))} mdxType=\"YButtonPrimary\">this button</YButtonPrimary></YModal>}\n\t</>}\n        </Observe>\n      </State>\n    </Playground>\n    <h2 {...{\n      \"id\": \"position-absolute\"\n    }}>{`position: absolute;`}</h2>\n    <Playground __position={3} __code={'<div style={{ position: \\'relative\\', height: \\'400px\\' }}>\\n  <YModal\\n    style={{\\n      position: \\'absolute\\',\\n      zIndex: \\'unset\\',\\n    }}\\n  >\\n    More like resolute!\\n  </YModal>\\n</div>'} __scope={{\n      props,\n      DefaultLayout,\n      Playground,\n      YModal,\n      YButtonPrimary,\n      State,\n      Observe,\n      SourceDisplay,\n      source\n    }} mdxType=\"Playground\">\n\t<div style={{\n        position: 'relative',\n        height: '400px'\n      }}>\n\t\t<YModal style={{\n          position: 'absolute',\n          zIndex: 'unset'\n        }} mdxType=\"YModal\">More like resolute!</YModal>\n\t</div>\n    </Playground>\n    <h2 {...{\n      \"id\": \"position-absolute-with-height-overflow\"\n    }}>{`position: absolute; with height overflow`}</h2>\n    <Playground __position={4} __code={'<div style={{ position: \\'relative\\', height: \\'400px\\' }}>\\n  <YModal\\n    style={{\\n      position: \\'absolute\\',\\n      zIndex: \\'unset\\',\\n    }}\\n  >\\n    <div>\\n      {Array(100)\\n        .fill()\\n        .map((_, i) => (\\n          <span key={\\'key\\' + i}>Wow there\\'s just so many words!</span>\\n        ))}\\n    </div>\\n    {Array(100)\\n      .fill()\\n      .map((_, i) => (\\n        <div key={\\'key\\' + i}>And just even more!</div>\\n      ))}\\n  </YModal>\\n</div>'} __scope={{\n      props,\n      DefaultLayout,\n      Playground,\n      YModal,\n      YButtonPrimary,\n      State,\n      Observe,\n      SourceDisplay,\n      source\n    }} mdxType=\"Playground\">\n\t<div style={{\n        position: 'relative',\n        height: '400px'\n      }}>\n\t\t<YModal style={{\n          position: 'absolute',\n          zIndex: 'unset'\n        }} mdxType=\"YModal\">\n\t\t\t<div>\n\t\t\t\t{Array(100).fill().map((_, i) => <span key={'key' + i}>Wow there's just so many words!</span>)}\n\t\t\t</div>\n\t\t\t{Array(100).fill().map((_, i) => <div key={'key' + i}>And just even more!</div>)}\n\t\t\t</YModal>\n\t</div>\n    </Playground>\n    <h1 {...{\n      \"id\": \"source\"\n    }}>{`Source`}</h1>\n    <p>{`./src/YBasic/YModal/YModal.js`}</p>\n    <SourceDisplay source={source} mdxType=\"SourceDisplay\" />\n\n    </MDXLayout>;\n}\n;\nMDXContent.isMDXComponent = true;\n      ","import React from 'react';\nimport { catClassName } from '../../util.js';\nimport './YModal.css';\n\nconst YModalDefaultClassName = 'y y-modal';\nconst YModalDefaultChildClassName = 'y y-modal-content'\n\nexport const ThemableYModal = (globalTheme = {}) => {\n\n    const {\n        defaultStyle={},\n        defaultChildStyle={}, \n        defaultClassName='',\n        defaultChildClassName='',\n        excludeComponentDefaultClassName=false,\n        excludeComponentDefaultChildClassName=false\n    } = ((globalTheme.YBasic || {}).YTable || {});\n\n    return ({\n        style = {},\n        childStyle = {},\n        \n        className: propClassName,\n        childClassName: propChildClassName,\n        \n        children,\n        \n        ...props\n    }) => {\n        return (\n            <div\n                className={catClassName(\n                    (excludeComponentDefaultClassName ? '' : YModalDefaultClassName),\n                    defaultClassName,\n                    propClassName\n                )}\n                style={Object.assign({}, defaultStyle, style)}\n                {...props}\n            >\n                <div\n                    className={catClassName(\n                        (excludeComponentDefaultChildClassName ? '' : YModalDefaultChildClassName),\n                        defaultChildClassName,\n                        propChildClassName\n                    )}\n                    style={Object.assign({}, defaultChildStyle, childStyle)}\n                >\n                    {children}\n                </div>\n            </div>\n        );\n    }\n    \n}\n\nconst YModal = ThemableYModal();\nexport default YModal;"],"sourceRoot":""}