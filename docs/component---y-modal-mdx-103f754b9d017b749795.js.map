{"version":3,"sources":["webpack:///../src/YBasic/YModal/YModal.js?39f3","webpack:///../YModal.mdx","webpack:///../src/YBasic/YButton/YButton.js","webpack:///../FunctionChild.js","webpack:///../src/YBasic/YModal/YModal.js"],"names":["_frontmatter","layoutProps","MDXLayout","DefaultLayout","MDXContent","components","props","mdxType","__position","__code","__scope","Playground","useState","YModal","YButtonPrimary","SourceDisplay","source","FunctionChild","open","setOpen","style","margin","YButton","onClick","child","width","onOutsideClick","Array","fill","map","_","i","key","position","height","zIndex","isMDXComponent","getGenericButton","getGenericThemableSubcomponentBuilder","globalTheme","undefined","Tag","dismplayName","extraClassNames","displayName","YButtonSecondary","children","genSubcomponent","Wrapper","Child","forwardRef","YModalComponent","className","yChild","wrapperRef","useRef","useClickOutsideHandler","ref"],"mappings":"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","file":"component---y-modal-mdx-103f754b9d017b749795.js","sourcesContent":["export default \"import React, {useRef} from 'react';\\nimport { getGenericThemableSubcomponentBuilder, useClickOutsideHandler } from '../../util.js';\\nimport './YModal.css';\\n\\nconst genSubcomponent = getGenericThemableSubcomponentBuilder('y modal', globalTheme => ((globalTheme.YBasic || {}).YModal || {}));\\n\\nconst Wrapper = genSubcomponent();\\nconst Child = genSubcomponent('child', {forwardRef: true});\\n\\nconst YModalComponent =  ({\\n    style = {},\\n    className = '',\\n\\n    yChild = {},\\n    \\n    children,\\n\\n    onOutsideClick,\\n    \\n    ...props\\n}) => {\\n    const wrapperRef = useRef();\\n    useClickOutsideHandler(wrapperRef, (e) => onOutsideClick && onOutsideClick(e));\\n    \\n    return (\\n    <Wrapper\\n        style={style}\\n        className={className}\\n        {...props}\\n    >\\n        <Child\\n            ref={wrapperRef} // This wraps the content, the real wrapper is 'outside'\\n            {...yChild}\\n        >\\n            {children}\\n        </Child>\\n    </Wrapper>\\n    );\\n}\\n\\nYModalComponent.displayName = 'YModal';\\nexport const YModal = YModalComponent;\\nexport default YModal;\"","import React from 'react'\n  /* @jsx mdx */\nimport { mdx } from '@mdx-js/react';\n/* @jsx mdx */\n\nimport DefaultLayout from \"/Users/thomas.coladonato/yeet-components/node_modules/gatsby-theme-docz/src/base/Layout.js\";\nimport { Playground } from 'docz';\nimport { useState } from 'react';\nimport YModal from './src/YBasic/YModal/YModal.js';\nimport { YButtonPrimary } from './src/YBasic/YButton/YButton.js';\nimport SourceDisplay from './SourceDisplay';\nimport source from '!!raw-loader!./src/YBasic/YModal/YModal.js';\nimport FunctionChild from './FunctionChild.js';\nexport const _frontmatter = {};\n\nconst makeShortcode = name => function MDXDefaultShortcode(props) {\n  console.warn(\"Component \" + name + \" was not imported, exported, or provided by MDXProvider as global scope\");\n  return <div {...props} />;\n};\n\nconst layoutProps = {\n  _frontmatter\n};\nconst MDXLayout = DefaultLayout;\nexport default function MDXContent({\n  components,\n  ...props\n}) {\n  return <MDXLayout {...layoutProps} {...props} components={components} mdxType=\"MDXLayout\">\n\n\n\n    <p>{`Quality: Sophistication`}</p>\n    <h1 {...{\n      \"id\": \"ymodal\"\n    }}>{`YModal`}</h1>\n    <hr></hr>\n    <h2 {...{\n      \"id\": \"position-fixed\"\n    }}>{`position: fixed;`}</h2>\n    <Playground __position={0} __code={'<FunctionChild>\\n  {() => {\\n    const [open, setOpen] = useState(false)\\n    return (\\n      <>\\n        <pre style={{ margin: 0 }}>{\\'(default)\\'}</pre>\\n        <YButtonPrimary onClick={() => setOpen(!open)}>\\n          Click me\\n        </YButtonPrimary>\\n        {open && (\\n          <YModal>\\n            Hello, I am a basic modal, close me with{\\' \\'}\\n            <YButtonPrimary onClick={() => setOpen(false)}>\\n              this button\\n            </YButtonPrimary>\\n          </YModal>\\n        )}\\n      </>\\n    )\\n  }}\\n</FunctionChild>'} __scope={{\n      props,\n      DefaultLayout,\n      Playground,\n      useState,\n      YModal,\n      YButtonPrimary,\n      SourceDisplay,\n      source,\n      FunctionChild\n    }} mdxType=\"Playground\">\n\t<FunctionChild mdxType=\"FunctionChild\">\n\t\t{() => {\n          const [open, setOpen] = useState(false);\n          return <>\n\t\t\t\t<pre style={{\n              margin: 0\n            }}>{'(default)'}</pre>\n\t\t\t\t<YButtonPrimary onClick={() => setOpen(!open)} mdxType=\"YButtonPrimary\">\n\t\t\t\t\tClick me\n\t\t\t\t</YButtonPrimary>\n\t\t\t\t{open && <YModal mdxType=\"YModal\">\n\t\t\t\t\t\tHello, I am a basic modal, close me with <YButtonPrimary onClick={() => setOpen(false)} mdxType=\"YButtonPrimary\">this button</YButtonPrimary>\n\t\t\t\t\t</YModal>}\n\t\t\t</>;\n        }}\n\t</FunctionChild>\n    </Playground>\n    <Playground __position={1} __code={'<FunctionChild>\\n  {() => {\\n    const [open, setOpen] = useState(false)\\n    return (\\n      <>\\n        <pre style={{ margin: 0 }}>{\\'width: fit-content\\'}</pre>\\n        <YButtonPrimary onClick={() => setOpen(!open)}>\\n          Click me\\n        </YButtonPrimary>\\n        {open && (\\n          <YModal child={{ style: { width: \\'fit-content\\' } }}>\\n            Hello, I am a basic modal, close me with{\\' \\'}\\n            <YButtonPrimary onClick={() => setOpen(false)}>\\n              this button\\n            </YButtonPrimary>\\n          </YModal>\\n        )}\\n      </>\\n    )\\n  }}\\n</FunctionChild>'} __scope={{\n      props,\n      DefaultLayout,\n      Playground,\n      useState,\n      YModal,\n      YButtonPrimary,\n      SourceDisplay,\n      source,\n      FunctionChild\n    }} mdxType=\"Playground\">\n\t<FunctionChild mdxType=\"FunctionChild\">\n\t\t{() => {\n          const [open, setOpen] = useState(false);\n          return <>\n\t\t\t<pre style={{\n              margin: 0\n            }}>{'width: fit-content'}</pre>\n\t\t\t\t<YButtonPrimary onClick={() => setOpen(!open)} mdxType=\"YButtonPrimary\">\n\t\t\t\t\tClick me\n\t\t\t\t</YButtonPrimary>\n\t\t\t\t{open && <YModal child={{\n              style: {\n                width: 'fit-content'\n              }\n            }} mdxType=\"YModal\">\n\t\t\t\t\t\tHello, I am a basic modal, close me with <YButtonPrimary onClick={() => setOpen(false)} mdxType=\"YButtonPrimary\">this button</YButtonPrimary>\n\t\t\t\t\t</YModal>}\n\t\t\t</>;\n        }}\n\t</FunctionChild>\n    </Playground>\n    <Playground __position={2} __code={'<FunctionChild>\\n  {() => {\\n    const [open, setOpen] = useState(false)\\n    return (\\n      <>\\n        <pre style={{ margin: 0 }}>\\n          {\\'width: fit-content with outside click\\'}\\n        </pre>\\n        <YButtonPrimary onClick={() => setOpen(!open)}>\\n          Click me\\n        </YButtonPrimary>\\n        {open && (\\n          <YModal\\n            onOutsideClick={() => setOpen(false)}\\n            child={{ style: { width: \\'fit-content\\' } }}\\n          >\\n            Hello, I am a basic modal, close me with{\\' \\'}\\n            <YButtonPrimary onClick={() => setOpen(false)}>\\n              this button\\n            </YButtonPrimary>{\\' \\'}\\n            or by clicking outside!\\n          </YModal>\\n        )}\\n      </>\\n    )\\n  }}\\n</FunctionChild>'} __scope={{\n      props,\n      DefaultLayout,\n      Playground,\n      useState,\n      YModal,\n      YButtonPrimary,\n      SourceDisplay,\n      source,\n      FunctionChild\n    }} mdxType=\"Playground\">\n\t<FunctionChild mdxType=\"FunctionChild\">\n\t\t{() => {\n          const [open, setOpen] = useState(false);\n          return <>\n\t\t\t\t<pre style={{\n              margin: 0\n            }}>{'width: fit-content with outside click'}</pre>\n\t\t\t\t<YButtonPrimary onClick={() => setOpen(!open)} mdxType=\"YButtonPrimary\">\n\t\t\t\t\tClick me\n\t\t\t\t</YButtonPrimary>\n\t\t\t\t{open && <YModal onOutsideClick={() => setOpen(false)} child={{\n              style: {\n                width: 'fit-content'\n              }\n            }} mdxType=\"YModal\">\n\t\t\t\t\t\tHello, I am a basic modal, close me with <YButtonPrimary onClick={() => setOpen(false)} mdxType=\"YButtonPrimary\">this button</YButtonPrimary> or by clicking outside!\n\t\t\t\t\t</YModal>}\n\t\t\t</>;\n        }}\n\t</FunctionChild>\n    </Playground>\n    <Playground __position={3} __code={'<FunctionChild>\\n  {() => {\\n    const [open, setOpen] = useState(false)\\n    return (\\n      <>\\n        <pre style={{ margin: 0 }}>{\\'with height overflow\\'}</pre>\\n        <YButtonPrimary onClick={() => setOpen(!open)}>\\n          Click me\\n        </YButtonPrimary>\\n        {open && (\\n          <YModal\\n            onOutsideClick={() => setOpen(false)}\\n            child={{ style: { width: \\'fit-content\\' } }}\\n          >\\n            Hello, I am a basic modal,\\n            <div>\\n              {Array(100)\\n                .fill()\\n                .map((_, i) => (\\n                  <span key={\\'key\\' + i}>and I\\'m just way too verbose</span>\\n                ))}\\n            </div>\\n            {Array(100)\\n              .fill()\\n              .map((_, i) => (\\n                <div key={\\'key\\' + i}>and I\\'m just way too verbose</div>\\n              ))}\\n            , close me with\\n            <YButtonPrimary onClick={() => setOpen(false)}>\\n              this button!\\n            </YButtonPrimary>\\n          </YModal>\\n        )}\\n      </>\\n    )\\n  }}\\n</FunctionChild>'} __scope={{\n      props,\n      DefaultLayout,\n      Playground,\n      useState,\n      YModal,\n      YButtonPrimary,\n      SourceDisplay,\n      source,\n      FunctionChild\n    }} mdxType=\"Playground\">\n\t<FunctionChild mdxType=\"FunctionChild\">\n\t\t{() => {\n          const [open, setOpen] = useState(false);\n          return <>\n\t\t\t\t<pre style={{\n              margin: 0\n            }}>{'with height overflow'}</pre>\n\t\t\t\t<YButtonPrimary onClick={() => setOpen(!open)} mdxType=\"YButtonPrimary\">\n\t\t\t\t\tClick me\n\t\t\t\t</YButtonPrimary>\n\t\t\t\t{open && <YModal onOutsideClick={() => setOpen(false)} child={{\n              style: {\n                width: 'fit-content'\n              }\n            }} mdxType=\"YModal\">\n\t\t\t\t\t\tHello, I am a basic modal,\n\t\t\t\t\t\t<div>\n\t\t\t\t\t\t\t{Array(100).fill().map((_, i) => <span key={'key' + i}>and I'm just way too verbose</span>)}\n\t\t\t\t\t\t</div>\n\t\t\t\t\t\t{Array(100).fill().map((_, i) => <div key={'key' + i}>and I'm just way too verbose</div>)}\n\t\t\t\t\t\t, close me with\n\t\t\t\t\t\t<YButtonPrimary onClick={() => setOpen(false)} mdxType=\"YButtonPrimary\">this button!</YButtonPrimary>\n\t\t\t\t\t</YModal>}\n\t\t\t</>;\n        }}\n\t</FunctionChild>\n    </Playground>\n    <h2 {...{\n      \"id\": \"position-absolute\"\n    }}>{`position: absolute;`}</h2>\n    <Playground __position={4} __code={'<>\\n  <pre style={{ margin: 0 }}>{\\'(default))\\'}</pre>\\n  <div style={{ position: \\'relative\\', height: \\'400px\\' }}>\\n    <YModal\\n      style={{\\n        position: \\'absolute\\',\\n        zIndex: \\'unset\\',\\n      }}\\n    >\\n      More like resolute!\\n    </YModal>\\n  </div>\\n</>'} __scope={{\n      props,\n      DefaultLayout,\n      Playground,\n      useState,\n      YModal,\n      YButtonPrimary,\n      SourceDisplay,\n      source,\n      FunctionChild\n    }} mdxType=\"Playground\">\n\t<>\n\t<pre style={{\n          margin: 0\n        }}>{'(default))'}</pre>\n\t<div style={{\n          position: 'relative',\n          height: '400px'\n        }}>\n\t\t<YModal style={{\n            position: 'absolute',\n            zIndex: 'unset'\n          }} mdxType=\"YModal\">More like resolute!</YModal>\n\t</div>\n\t</>\n    </Playground>\n    <Playground __position={5} __code={'<>\\n  <pre style={{ margin: 0 }}>{\\'with height overflow\\'}</pre>\\n  <div style={{ position: \\'relative\\', height: \\'400px\\' }}>\\n    <YModal\\n      style={{\\n        position: \\'absolute\\',\\n        zIndex: \\'unset\\',\\n      }}\\n    >\\n      <div>\\n        {Array(100)\\n          .fill()\\n          .map((_, i) => (\\n            <span key={\\'key\\' + i}>Wow there\\'s just so many words!</span>\\n          ))}\\n      </div>\\n      {Array(100)\\n        .fill()\\n        .map((_, i) => (\\n          <div key={\\'key\\' + i}>And just even more!</div>\\n        ))}\\n    </YModal>\\n  </div>\\n</>'} __scope={{\n      props,\n      DefaultLayout,\n      Playground,\n      useState,\n      YModal,\n      YButtonPrimary,\n      SourceDisplay,\n      source,\n      FunctionChild\n    }} mdxType=\"Playground\">\n\t<>\n\t<pre style={{\n          margin: 0\n        }}>{'with height overflow'}</pre>\n\t<div style={{\n          position: 'relative',\n          height: '400px'\n        }}>\n\t\t<YModal style={{\n            position: 'absolute',\n            zIndex: 'unset'\n          }} mdxType=\"YModal\">\n\t\t\t<div>\n\t\t\t\t{Array(100).fill().map((_, i) => <span key={'key' + i}>Wow there's just so many words!</span>)}\n\t\t\t</div>\n\t\t\t{Array(100).fill().map((_, i) => <div key={'key' + i}>And just even more!</div>)}\n\t\t\t</YModal>\n\t</div>\n\t</>\n    </Playground>\n    <h1 {...{\n      \"id\": \"source\"\n    }}>{`Source`}</h1>\n    <p>{`./src/YBasic/YModal/YModal.js`}</p>\n    <SourceDisplay source={source} mdxType=\"SourceDisplay\" />\n\n    </MDXLayout>;\n}\n;\nMDXContent.isMDXComponent = true;\n      ","import { getGenericThemableSubcomponentBuilder } from '../../util.js';\nimport './YButton.css';\n\nconst getGenericButton = getGenericThemableSubcomponentBuilder('y button', globalTheme => ((globalTheme.YBasic || {}).YButton || {}))\n\nexport const YButton = getGenericButton(undefined, {\n    Tag: 'button',\n    dismplayName: 'YButton'\n});\n\nexport const YButtonPrimary = getGenericButton(undefined, {\n    Tag: 'button',\n    extraClassNames: ['primary'],\n    displayName: 'YButtonPrimary'\n});\n\nexport const YButtonSecondary = getGenericButton(undefined, {\n    Tag: 'button',\n    extraClassNames: ['secondary'],\n    displayName: 'YButtonPrimary'\n});\n\nexport default {\n\tYButtonPrimary,\n\tYButtonSecondary,\n\tYButton\n};\n","import React from 'react';\n\nexport default ({children}) => {\n    return <>{children()}</>;\n}","import React, {useRef} from 'react';\nimport { getGenericThemableSubcomponentBuilder, useClickOutsideHandler } from '../../util.js';\nimport './YModal.css';\n\nconst genSubcomponent = getGenericThemableSubcomponentBuilder('y modal', globalTheme => ((globalTheme.YBasic || {}).YModal || {}));\n\nconst Wrapper = genSubcomponent();\nconst Child = genSubcomponent('child', {forwardRef: true});\n\nconst YModalComponent =  ({\n    style = {},\n    className = '',\n\n    yChild = {},\n    \n    children,\n\n    onOutsideClick,\n    \n    ...props\n}) => {\n    const wrapperRef = useRef();\n    useClickOutsideHandler(wrapperRef, (e) => onOutsideClick && onOutsideClick(e));\n    \n    return (\n    <Wrapper\n        style={style}\n        className={className}\n        {...props}\n    >\n        <Child\n            ref={wrapperRef} // This wraps the content, the real wrapper is 'outside'\n            {...yChild}\n        >\n            {children}\n        </Child>\n    </Wrapper>\n    );\n}\n\nYModalComponent.displayName = 'YModal';\nexport const YModal = YModalComponent;\nexport default YModal;"],"sourceRoot":""}