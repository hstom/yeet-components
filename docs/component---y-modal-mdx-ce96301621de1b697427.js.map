{"version":3,"sources":["webpack:///../src/YBasic/YModal/YModal.js?39f3","webpack:///../YModal.mdx","webpack:///../src/YBasic/YButton/YButton.js","webpack:///../src/YBasic/YModal/YModal.js"],"names":["_frontmatter","layoutProps","MDXLayout","DefaultLayout","MDXContent","components","props","mdxType","__position","__code","__scope","Playground","YModal","YButtonPrimary","State","Observe","SourceDisplay","source","initialState","count","setState","YButton","onClick","s","child","style","width","onOutsideClick","Array","fill","map","_","i","key","position","height","disableOutsideClick","zIndex","isMDXComponent","ThemableYButton","buildGenericThemableComponent","Tag","componentClassName","themeSelector","globalTheme","displayName","ThemableYButtonPrimary","ThemableYButtonSecondary","YButtonSecondary","ThemableYButtons","genSubcomponent","getGenericThemableSubcomponentBuilder","ThemableYModal","ThemedYModalWrapper","ThemedYModalChild","forwardRef","React","render","this","className","children","ref","outsideClick"],"mappings":"8NAAe,0hD,oSCYR,IAAMA,EAAe,Q,2JAE5B,IAKMC,EAAc,CAClBD,gBAEIE,EAAYC,IACH,SAASC,EAAT,GAGZ,IAFDC,EAEC,EAFDA,WACGC,E,oIACF,mBACD,OAAO,YAACJ,EAAD,KAAeD,EAAiBK,EAAhC,CAAuCD,WAAYA,EAAYE,QAAQ,cAI5E,gDACA,iBAAQ,CACN,GAAM,UADR,UAGA,uBACA,iBAAQ,CACN,GAAM,kBADR,oBAGA,iBAAQ,CACN,GAAM,0BADR,6BAGA,YAAC,IAAD,CAAYC,WAAY,EAAGC,OAAQ,shBAAyhBC,QAAS,CACnkBJ,QACAH,kBACAQ,eACAC,WACAC,mBACAC,UACAC,YACAC,kBACAC,UACCV,QAAQ,cACT,YAAC,IAAD,CAAOW,aAAc,CACnBC,OAAO,GACNZ,QAAQ,SACT,YAAC,IAAD,CAASA,QAAQ,YACd,gBACCY,EADD,EACCA,MACAC,EAFD,EAECA,SAFD,OAGK,8BACd,YAACC,EAAA,EAAD,CAAgBC,QAAS,kBAAMF,GAAS,SAAAG,GAAC,MAAK,CAClCJ,OAAO,OACJZ,QAAQ,kBAFvB,YAKCY,GAAS,YAACP,EAAA,EAAD,CAAQL,QAAQ,UAAhB,4CAAkE,YAACc,EAAA,EAAD,CAAgBC,QAAS,kBAAMF,GAAS,SAAAG,GAAC,MAAK,CAC5GJ,OAAO,OACJZ,QAAQ,kBAFmD,sBAO1E,iBAAQ,CACN,GAAM,iDADR,qDAGA,YAAC,IAAD,CAAYC,WAAY,EAAGC,OAAQ,kkBAAukBC,QAAS,CACjnBJ,QACAH,kBACAQ,eACAC,WACAC,mBACAC,UACAC,YACAC,kBACAC,UACCV,QAAQ,cACT,YAAC,IAAD,CAAOW,aAAc,CACnBC,OAAO,GACNZ,QAAQ,SACT,YAAC,IAAD,CAASA,QAAQ,YACd,gBACCY,EADD,EACCA,MACAC,EAFD,EAECA,SAFD,OAGK,8BACd,YAACC,EAAA,EAAD,CAAgBC,QAAS,kBAAMF,GAAS,SAAAG,GAAC,MAAK,CAClCJ,OAAO,OACJZ,QAAQ,kBAFvB,YAKCY,GAAS,YAACP,EAAA,EAAD,CAAQY,MAAO,CACbC,MAAO,CACLC,MAAO,gBAERnB,QAAQ,UAJX,4CAI6D,YAACc,EAAA,EAAD,CAAgBC,QAAS,kBAAMF,GAAS,SAAAG,GAAC,MAAK,CACvGJ,OAAO,OACJZ,QAAQ,kBAF8C,sBAOrE,iBAAQ,CACN,GAAM,6CADR,gDAGA,YAAC,IAAD,CAAYC,WAAY,EAAGC,OAAQ,2sBAAktBC,QAAS,CAC5vBJ,QACAH,kBACAQ,eACAC,WACAC,mBACAC,UACAC,YACAC,kBACAC,UACCV,QAAQ,cACT,YAAC,IAAD,CAAOW,aAAc,CACnBC,OAAO,GACNZ,QAAQ,SACT,YAAC,IAAD,CAASA,QAAQ,YACd,gBACCY,EADD,EACCA,MACAC,EAFD,EAECA,SAFD,OAGK,8BACd,YAACC,EAAA,EAAD,CAAgBC,QAAS,kBAAMF,GAAS,SAAAG,GAAC,MAAK,CAClCJ,OAAO,OACJZ,QAAQ,kBAFvB,YAKCY,GAAS,YAACP,EAAA,EAAD,CAAQe,eAAgB,kBAAMP,GAAS,SAAAG,GAAC,MAAK,CAC3CJ,OAAO,OACJK,MAAO,CACVC,MAAO,CACLC,MAAO,gBAERnB,QAAQ,UANX,4CAM6D,YAACc,EAAA,EAAD,CAAgBC,QAAS,kBAAMF,GAAS,SAAAG,GAAC,MAAK,CACvGJ,OAAO,OACJZ,QAAQ,kBAF8C,eAN7D,kCAaR,iBAAQ,CACN,GAAM,+CADR,kDAGA,YAAC,IAAD,CAAYC,WAAY,EAAGC,OAAQ,26BAAk7BC,QAAS,CAC59BJ,QACAH,kBACAQ,eACAC,WACAC,mBACAC,UACAC,YACAC,kBACAC,UACCV,QAAQ,cACT,YAAC,IAAD,CAAOW,aAAc,CACnBC,OAAO,GACNZ,QAAQ,SACT,YAAC,IAAD,CAASA,QAAQ,YACd,gBACCY,EADD,EACCA,MACAC,EAFD,EAECA,SAFD,OAGK,8BACd,YAACC,EAAA,EAAD,CAAgBC,QAAS,kBAAMF,GAAS,SAAAG,GAAC,MAAK,CAClCJ,OAAO,OACJZ,QAAQ,kBAFvB,YAKCY,GAAS,YAACP,EAAA,EAAD,CAAQL,QAAQ,UAAhB,6BAET,uBACEqB,MAAM,KAAKC,OAAOC,KAAI,SAACC,EAAGC,GAAJ,OAAU,oBAAMC,IAAK,MAAQD,GAAnB,oCAEjCJ,MAAM,KAAKC,OAAOC,KAAI,SAACC,EAAGC,GAAJ,OAAU,mBAAKC,IAAK,MAAQD,GAAlB,mCALxB,kBAQT,YAACX,EAAA,EAAD,CAAgBC,QAAS,kBAAMF,GAAS,SAAAG,GAAC,MAAK,CACjCJ,OAAO,OACJZ,QAAQ,kBAFxB,sBAOC,iBAAQ,CACN,GAAM,qBADR,uBAGA,YAAC,IAAD,CAAYC,WAAY,EAAGC,OAAQ,4NAAqOC,QAAS,CAC/QJ,QACAH,kBACAQ,eACAC,WACAC,mBACAC,UACAC,YACAC,kBACAC,UACCV,QAAQ,cACd,mBAAKkB,MAAO,CACLS,SAAU,WACVC,OAAQ,UAEd,YAACvB,EAAA,EAAD,CAAQwB,qBAAmB,EAACX,MAAO,CAC3BS,SAAU,WACVG,OAAQ,SACP9B,QAAQ,UAHjB,yBAME,iBAAQ,CACN,GAAM,0CADR,4CAGA,YAAC,IAAD,CAAYC,WAAY,EAAGC,OAAQ,weAAsfC,QAAS,CAChiBJ,QACAH,kBACAQ,eACAC,WACAC,mBACAC,UACAC,YACAC,kBACAC,UACCV,QAAQ,cACd,mBAAKkB,MAAO,CACLS,SAAU,WACVC,OAAQ,UAEd,YAACvB,EAAA,EAAD,CAAQwB,qBAAmB,EAACX,MAAO,CAC3BS,SAAU,WACVG,OAAQ,SACP9B,QAAQ,UAChB,uBACEqB,MAAM,KAAKC,OAAOC,KAAI,SAACC,EAAGC,GAAJ,OAAU,oBAAMC,IAAK,MAAQD,GAAnB,uCAEjCJ,MAAM,KAAKC,OAAOC,KAAI,SAACC,EAAGC,GAAJ,OAAU,mBAAKC,IAAK,MAAQD,GAAlB,6BAIhC,iBAAQ,CACN,GAAM,UADR,UAGA,sDACA,YAAChB,EAAA,EAAD,CAAeC,OAAQA,EAAQV,QAAQ,mB,kJAK3CH,EAAWkC,gBAAiB,G,6NC5PfC,G,OAAkBC,YAA8B,CACzDC,IADyD,SAEzDC,mBAFyD,WAGzDC,cAAe,mBAAoBC,UAAD,IAAD,SAAlB,IACfC,YAAa,kB,uWAGV,IAAMC,EAAyBN,YAA8B,CAChEC,IADgE,SAEhEC,mBAFgE,mBAGhEC,cAAe,mBAAoBC,UAAD,IAAD,SAAlB,IACfC,YAAa,wB,qXAGV,IAAME,EAA2BP,YAA8B,CAClEC,IADkE,SAElEC,mBAFkE,qBAGlEC,cAAe,mBAAoBC,UAAD,IAAD,SAAlB,IACfC,YAAa,0B,yXAGV,IAAMxB,EAAUkB,S,uVAChB,IAAM1B,EAAiBiC,S,qWACvB,IAAME,EAAmBD,S,yWAEzB,IAAME,EAAmB,SAAAL,GAAW,MAAK,CAC/CvB,QAASkB,EADsC,GAE/C1B,eAAgBiC,EAF+B,GAG/CE,iBAAkBD,EAAyBH,K,uuDC3B5C,IAAMM,EAAkBC,YAAsC,WAAW,SAAAP,GAAW,OAAMA,UAAD,YAAL,MAEvEQ,EAAiB,SAAAR,GAC1B,IAAMS,EAAsBH,IAA5B,GACMI,EAAoBJ,EAAgB,QAAS,CAACK,YAAY,GAAtCL,CAA1B,GAEMtC,EAJmC,Y,QAKrC,cAAoB,IAAD,SACf,wBACA,WAAkB4C,IAAlB,YAFe,EALkB,O,EAAA,G,EAAA,G,6EAAA,mBAUrCC,WAAU,IAAD,EAYDC,KAZC,gBAEDjC,OAFC,yBAGDkC,OAHC,qBAKDnC,OALC,WAODoC,EAPC,WAWEtD,GAXF,iB,oIAAA,+DAcL,OACA,iBACImB,MADJ,EAEIkC,UAAWA,GAFf,GAKI,iBACIE,IAAKH,KADT,eANJ,KAxBiC,GAIpBF,IAJoB,WAyCzC,OAAOM,YAAP,S,iWAGJ,IAAMlD,EAASwC,IACf,W","file":"component---y-modal-mdx-ce96301621de1b697427.js","sourcesContent":["export default \"import React from 'react';\\nimport { getGenericThemableSubcomponentBuilder, outsideClick } from '../../util.js';\\nimport './YModal.css';\\n\\nconst genSubcomponent = getGenericThemableSubcomponentBuilder('y modal', globalTheme => ((globalTheme.YBasic || {}).YModal || {}));\\n\\nexport const ThemableYModal = globalTheme => {\\n    const ThemedYModalWrapper = genSubcomponent()(globalTheme);\\n    const ThemedYModalChild = genSubcomponent('child', {forwardRef: true})(globalTheme);\\n\\n    class YModal extends React.Component {\\n        constructor(props) {\\n            super(props);\\n            this.wrapperRef = React.createRef();\\n        }\\n\\n        render() {\\n            const {\\n                style = {},\\n                className = '',\\n        \\n                child = {},\\n                \\n                children,\\n\\n                onOutsideClick, // omitted\\n                \\n                ...props\\n            } = this.props;\\n            \\n            return (\\n            <ThemedYModalWrapper\\n                style={style}\\n                className={className}\\n                {...props}\\n            >\\n                <ThemedYModalChild\\n                    ref={this.wrapperRef} // This wraps the content, the real wrapper is 'outside'\\n                    {...child}\\n                >\\n                    {children}\\n                </ThemedYModalChild>\\n            </ThemedYModalWrapper>\\n            );\\n        }\\n    }\\n\\n    return outsideClick(YModal);\\n}\\n\\nconst YModal = ThemableYModal();\\nexport default YModal;\"","import React from 'react'\n  /* @jsx mdx */\nimport { mdx } from '@mdx-js/react';\n/* @jsx mdx */\n\nimport DefaultLayout from \"/Users/thomas.coladonato/yeet-components/node_modules/gatsby-theme-docz/src/base/Layout.js\";\nimport { Playground } from 'docz';\nimport YModal from './src/YBasic/YModal/YModal.js';\nimport { YButtonPrimary } from './src/YBasic/YButton/YButton.js';\nimport { State, Observe } from \"mdx-observable\";\nimport SourceDisplay from './SourceDisplay';\nimport source from '!!raw-loader!./src/YBasic/YModal/YModal.js';\nexport const _frontmatter = {};\n\nconst makeShortcode = name => function MDXDefaultShortcode(props) {\n  console.warn(\"Component \" + name + \" was not imported, exported, or provided by MDXProvider as global scope\");\n  return <div {...props} />;\n};\n\nconst layoutProps = {\n  _frontmatter\n};\nconst MDXLayout = DefaultLayout;\nexport default function MDXContent({\n  components,\n  ...props\n}) {\n  return <MDXLayout {...layoutProps} {...props} components={components} mdxType=\"MDXLayout\">\n\n\n\n    <p>{`Quality: Sophistication`}</p>\n    <h1 {...{\n      \"id\": \"ymodal\"\n    }}>{`YModal`}</h1>\n    <hr></hr>\n    <h2 {...{\n      \"id\": \"position-fixed\"\n    }}>{`position: fixed;`}</h2>\n    <h3 {...{\n      \"id\": \"position-fixed-default\"\n    }}>{`position: fixed (default)`}</h3>\n    <Playground __position={0} __code={'<State initialState={{ count: false }}>\\n  <Observe>\\n    {({ count, setState }) => (\\n      <>\\n        <YButtonPrimary onClick={() => setState(s => ({ count: true }))}>\\n          Click me\\n        </YButtonPrimary>\\n        {count && (\\n          <YModal>\\n            Hello, I am a basic modal, close me with{\\' \\'}\\n            <YButtonPrimary onClick={() => setState(s => ({ count: false }))}>\\n              this button\\n            </YButtonPrimary>\\n          </YModal>\\n        )}\\n      </>\\n    )}\\n  </Observe>\\n</State>'} __scope={{\n      props,\n      DefaultLayout,\n      Playground,\n      YModal,\n      YButtonPrimary,\n      State,\n      Observe,\n      SourceDisplay,\n      source\n    }} mdxType=\"Playground\">\n      <State initialState={{\n        count: false\n      }} mdxType=\"State\">\n        <Observe mdxType=\"Observe\">\n          {({\n            count,\n            setState\n          }) => <>\n\t\t<YButtonPrimary onClick={() => setState(s => ({\n              count: true\n            }))} mdxType=\"YButtonPrimary\">\n\t\tClick me\n\t\t</YButtonPrimary>\n\t\t{count && <YModal mdxType=\"YModal\">Hello, I am a basic modal, close me with <YButtonPrimary onClick={() => setState(s => ({\n                count: false\n              }))} mdxType=\"YButtonPrimary\">this button</YButtonPrimary></YModal>}\n\t</>}\n        </Observe>\n      </State>\n    </Playground>\n    <h3 {...{\n      \"id\": \"position-fixed-default-with-width-fit-content\"\n    }}>{`position: fixed (default) with width: fit-content`}</h3>\n    <Playground __position={1} __code={'<State initialState={{ count: false }}>\\n  <Observe>\\n    {({ count, setState }) => (\\n      <>\\n        <YButtonPrimary onClick={() => setState(s => ({ count: true }))}>\\n          Click me\\n        </YButtonPrimary>\\n        {count && (\\n          <YModal child={{ style: { width: \\'fit-content\\' } }}>\\n            Hello, I am a basic modal, close me with{\\' \\'}\\n            <YButtonPrimary onClick={() => setState(s => ({ count: false }))}>\\n              this button\\n            </YButtonPrimary>\\n          </YModal>\\n        )}\\n      </>\\n    )}\\n  </Observe>\\n</State>'} __scope={{\n      props,\n      DefaultLayout,\n      Playground,\n      YModal,\n      YButtonPrimary,\n      State,\n      Observe,\n      SourceDisplay,\n      source\n    }} mdxType=\"Playground\">\n      <State initialState={{\n        count: false\n      }} mdxType=\"State\">\n        <Observe mdxType=\"Observe\">\n          {({\n            count,\n            setState\n          }) => <>\n\t\t<YButtonPrimary onClick={() => setState(s => ({\n              count: true\n            }))} mdxType=\"YButtonPrimary\">\n\t\tClick me\n\t\t</YButtonPrimary>\n\t\t{count && <YModal child={{\n              style: {\n                width: 'fit-content'\n              }\n            }} mdxType=\"YModal\">Hello, I am a basic modal, close me with <YButtonPrimary onClick={() => setState(s => ({\n                count: false\n              }))} mdxType=\"YButtonPrimary\">this button</YButtonPrimary></YModal>}\n\t</>}\n        </Observe>\n      </State>\n    </Playground>\n    <h3 {...{\n      \"id\": \"position-fixed-default-with-outside-click\"\n    }}>{`position: fixed (default) with outside click`}</h3>\n    <Playground __position={2} __code={'<State initialState={{ count: false }}>\\n  <Observe>\\n    {({ count, setState }) => (\\n      <>\\n        <YButtonPrimary onClick={() => setState(s => ({ count: true }))}>\\n          Click me\\n        </YButtonPrimary>\\n        {count && (\\n          <YModal\\n            onOutsideClick={() => setState(s => ({ count: false }))}\\n            child={{ style: { width: \\'fit-content\\' } }}\\n          >\\n            Hello, I am a basic modal, close me with{\\' \\'}\\n            <YButtonPrimary onClick={() => setState(s => ({ count: false }))}>\\n              this button\\n            </YButtonPrimary>{\\' \\'}\\n            or by clicking outside!\\n          </YModal>\\n        )}\\n      </>\\n    )}\\n  </Observe>\\n</State>'} __scope={{\n      props,\n      DefaultLayout,\n      Playground,\n      YModal,\n      YButtonPrimary,\n      State,\n      Observe,\n      SourceDisplay,\n      source\n    }} mdxType=\"Playground\">\n      <State initialState={{\n        count: false\n      }} mdxType=\"State\">\n        <Observe mdxType=\"Observe\">\n          {({\n            count,\n            setState\n          }) => <>\n\t\t<YButtonPrimary onClick={() => setState(s => ({\n              count: true\n            }))} mdxType=\"YButtonPrimary\">\n\t\tClick me\n\t\t</YButtonPrimary>\n\t\t{count && <YModal onOutsideClick={() => setState(s => ({\n              count: false\n            }))} child={{\n              style: {\n                width: 'fit-content'\n              }\n            }} mdxType=\"YModal\">Hello, I am a basic modal, close me with <YButtonPrimary onClick={() => setState(s => ({\n                count: false\n              }))} mdxType=\"YButtonPrimary\">this button</YButtonPrimary> or by clicking outside!</YModal>}\n\t</>}\n        </Observe>\n      </State>\n    </Playground>\n    <h2 {...{\n      \"id\": \"position-fixed-default-with-height-overflow\"\n    }}>{`position: fixed (default) with height overflow`}</h2>\n    <Playground __position={3} __code={'<State initialState={{ count: false }}>\\n  <Observe>\\n    {({ count, setState }) => (\\n      <>\\n        <YButtonPrimary onClick={() => setState(s => ({ count: true }))}>\\n          Click me\\n        </YButtonPrimary>\\n        {count && (\\n          <YModal>\\n            Hello, I am a basic modal,\\n            <div>\\n              {Array(100)\\n                .fill()\\n                .map((_, i) => (\\n                  <span key={\\'key\\' + i}>and I\\'m just way too verbose</span>\\n                ))}\\n            </div>\\n            {Array(100)\\n              .fill()\\n              .map((_, i) => (\\n                <div key={\\'key\\' + i}>and I\\'m just way too verbose</div>\\n              ))}\\n            , close me with\\n            <YButtonPrimary onClick={() => setState(s => ({ count: false }))}>\\n              this button\\n            </YButtonPrimary>\\n          </YModal>\\n        )}\\n      </>\\n    )}\\n  </Observe>\\n</State>'} __scope={{\n      props,\n      DefaultLayout,\n      Playground,\n      YModal,\n      YButtonPrimary,\n      State,\n      Observe,\n      SourceDisplay,\n      source\n    }} mdxType=\"Playground\">\n      <State initialState={{\n        count: false\n      }} mdxType=\"State\">\n        <Observe mdxType=\"Observe\">\n          {({\n            count,\n            setState\n          }) => <>\n\t\t<YButtonPrimary onClick={() => setState(s => ({\n              count: true\n            }))} mdxType=\"YButtonPrimary\">\n\t\tClick me\n\t\t</YButtonPrimary>\n\t\t{count && <YModal mdxType=\"YModal\">\n\t\t\tHello, I am a basic modal,\n\t\t\t<div>\n\t\t\t\t{Array(100).fill().map((_, i) => <span key={'key' + i}>and I'm just way too verbose</span>)}\n\t\t\t</div>\n\t\t\t{Array(100).fill().map((_, i) => <div key={'key' + i}>and I'm just way too verbose</div>)}\n\t\t\t, close me with\n\t\t\t\n\t\t\t<YButtonPrimary onClick={() => setState(s => ({\n                count: false\n              }))} mdxType=\"YButtonPrimary\">this button</YButtonPrimary></YModal>}\n\t</>}\n        </Observe>\n      </State>\n    </Playground>\n    <h2 {...{\n      \"id\": \"position-absolute\"\n    }}>{`position: absolute;`}</h2>\n    <Playground __position={4} __code={'<div style={{ position: \\'relative\\', height: \\'400px\\' }}>\\n  <YModal\\n    disableOutsideClick\\n    style={{\\n      position: \\'absolute\\',\\n      zIndex: \\'unset\\',\\n    }}\\n  >\\n    More like resolute!\\n  </YModal>\\n</div>'} __scope={{\n      props,\n      DefaultLayout,\n      Playground,\n      YModal,\n      YButtonPrimary,\n      State,\n      Observe,\n      SourceDisplay,\n      source\n    }} mdxType=\"Playground\">\n\t<div style={{\n        position: 'relative',\n        height: '400px'\n      }}>\n\t\t<YModal disableOutsideClick style={{\n          position: 'absolute',\n          zIndex: 'unset'\n        }} mdxType=\"YModal\">More like resolute!</YModal>\n\t</div>\n    </Playground>\n    <h2 {...{\n      \"id\": \"position-absolute-with-height-overflow\"\n    }}>{`position: absolute; with height overflow`}</h2>\n    <Playground __position={5} __code={'<div style={{ position: \\'relative\\', height: \\'400px\\' }}>\\n  <YModal\\n    disableOutsideClick\\n    style={{\\n      position: \\'absolute\\',\\n      zIndex: \\'unset\\',\\n    }}\\n  >\\n    <div>\\n      {Array(100)\\n        .fill()\\n        .map((_, i) => (\\n          <span key={\\'key\\' + i}>Wow there\\'s just so many words!</span>\\n        ))}\\n    </div>\\n    {Array(100)\\n      .fill()\\n      .map((_, i) => (\\n        <div key={\\'key\\' + i}>And just even more!</div>\\n      ))}\\n  </YModal>\\n</div>'} __scope={{\n      props,\n      DefaultLayout,\n      Playground,\n      YModal,\n      YButtonPrimary,\n      State,\n      Observe,\n      SourceDisplay,\n      source\n    }} mdxType=\"Playground\">\n\t<div style={{\n        position: 'relative',\n        height: '400px'\n      }}>\n\t\t<YModal disableOutsideClick style={{\n          position: 'absolute',\n          zIndex: 'unset'\n        }} mdxType=\"YModal\">\n\t\t\t<div>\n\t\t\t\t{Array(100).fill().map((_, i) => <span key={'key' + i}>Wow there's just so many words!</span>)}\n\t\t\t</div>\n\t\t\t{Array(100).fill().map((_, i) => <div key={'key' + i}>And just even more!</div>)}\n\t\t\t</YModal>\n\t</div>\n    </Playground>\n    <h1 {...{\n      \"id\": \"source\"\n    }}>{`Source`}</h1>\n    <p>{`./src/YBasic/YModal/YModal.js`}</p>\n    <SourceDisplay source={source} mdxType=\"SourceDisplay\" />\n\n    </MDXLayout>;\n}\n;\nMDXContent.isMDXComponent = true;\n      ","import { buildGenericThemableComponent } from '../../util.js';\nimport './YButton.css';\n\nexport const ThemableYButton = buildGenericThemableComponent({\n    Tag: 'button',\n    componentClassName: 'y-button',\n    themeSelector: (globalTheme) => (((globalTheme.YBasic || {}).YButton) || {}),\n    displayName: 'YButton'\n});\n\nexport const ThemableYButtonPrimary = buildGenericThemableComponent({\n    Tag: 'button',\n    componentClassName: 'y-button primary',\n    themeSelector: (globalTheme) => (((globalTheme.YBasic || {}).YButton) || {}),\n    displayName: 'YButtonPrimary'\n});\n\nexport const ThemableYButtonSecondary = buildGenericThemableComponent({\n    Tag: 'button',\n    componentClassName: 'y-button secondary',\n    themeSelector: (globalTheme) => (((globalTheme.YBasic || {}).YButton) || {}),\n    displayName: 'YButtonSecondary'\n});\n\nexport const YButton = ThemableYButton();\nexport const YButtonPrimary = ThemableYButtonPrimary()\nexport const YButtonSecondary = ThemableYButtonSecondary();\n\nexport const ThemableYButtons = globalTheme => ({\n\tYButton: ThemableYButton(globalTheme),\n\tYButtonPrimary: ThemableYButtonPrimary(globalTheme),\n\tYButtonSecondary: ThemableYButtonSecondary(globalTheme)\n});\n\nexport default {\n\tYButtonPrimary,\n\tYButtonSecondary,\n\tYButton\n};\n","import React from 'react';\nimport { getGenericThemableSubcomponentBuilder, outsideClick } from '../../util.js';\nimport './YModal.css';\n\nconst genSubcomponent = getGenericThemableSubcomponentBuilder('y modal', globalTheme => ((globalTheme.YBasic || {}).YModal || {}));\n\nexport const ThemableYModal = globalTheme => {\n    const ThemedYModalWrapper = genSubcomponent()(globalTheme);\n    const ThemedYModalChild = genSubcomponent('child', {forwardRef: true})(globalTheme);\n\n    class YModal extends React.Component {\n        constructor(props) {\n            super(props);\n            this.wrapperRef = React.createRef();\n        }\n\n        render() {\n            const {\n                style = {},\n                className = '',\n        \n                child = {},\n                \n                children,\n\n                onOutsideClick, // omitted\n                \n                ...props\n            } = this.props;\n            \n            return (\n            <ThemedYModalWrapper\n                style={style}\n                className={className}\n                {...props}\n            >\n                <ThemedYModalChild\n                    ref={this.wrapperRef} // This wraps the content, the real wrapper is 'outside'\n                    {...child}\n                >\n                    {children}\n                </ThemedYModalChild>\n            </ThemedYModalWrapper>\n            );\n        }\n    }\n\n    return outsideClick(YModal);\n}\n\nconst YModal = ThemableYModal();\nexport default YModal;"],"sourceRoot":""}