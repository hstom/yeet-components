(window.webpackJsonp=window.webpackJsonp||[]).push([[8],{990:function(e,n,t){"use strict";t.r(n);t(12),t(6),t(7),t(4),t(8),t(5),t(9),t(1);var r=t(82),a=t(971),o=(t(33),t(972)),s="import React, {useEffect, useRef} from 'react';\nexport const catClassName = (...classNames) => {\n    return [].concat.apply([],\n        classNames.map((className = '') => Array.from(new Set(className.split(' ').filter(z => !!z))))\n    ).join(' ');\n};\n\nexport const mergeRefs = (...refs) => (elem) => {\n    refs.forEach(ref => {\n        if(typeof ref === 'function') {\n            ref(elem);\n        } else {\n            ref.current = elem;\n        }\n    });\n}\n\n/**\n * Requires target to bind a wrapperRef;\n * requires target to have a onOutsideClick method\n */\nexport const outsideClick = (WrappedComponent) => ({disableOutsideClick, ...props}) => {\n    const clickTarget = useRef();\n\n    if(!disableOutsideClick) {\n        useEffect(() => {\n            const checkOutsideClick = e => {\n                if(clickTarget.current && clickTarget.current.wrapperRef.current && !clickTarget.current.wrapperRef.current.contains(e.target)) {\n                    e.preventDefault();\n                    if(clickTarget.current.props.onOutsideClick) {\n                        clickTarget.current.props.onOutsideClick(e);\n                    } else if (clickTarget.current.onOutsideClick) {\n                        clickTarget.current.onOutsideClick(e);\n                    }\n                };\n            }\n\n            document.addEventListener('mousedown', checkOutsideClick, false);\n\n            return () => {\n                document.removeEventListener('mousedown', checkOutsideClick, false);\n            }\n        }, [clickTarget]);\n    }\n\n    return  (<WrappedComponent ref={clickTarget} {...props} />);\n}\n\nexport const buildGenericThemableComponent = ({\n    Tag = 'div',\n    componentClassName = '',\n    themeSelector = () => { },\n    displayName='YComponent',\n    propMutator = props => props,\n    forwardRef = false\n}) => {\n    return (globalTheme = {}) => {\n        const {\n            defaultStyle = {},\n            defaultClassName = '',\n            excludeComponentDefaultClassName = false,\n        } = themeSelector(globalTheme);\n\n\n        if(forwardRef) { // TODO inline\n            const Component = (preProps) => {\n                const {\n                    style = {},\n                    className,\n        \n                    children,\n                    forwardedRef,\n                    ...props\n                } = propMutator(preProps);\n                return (\n                    <Tag\n                        className={catClassName(\n                            (excludeComponentDefaultClassName ? '' : `y ${componentClassName}`),\n                            defaultClassName,\n                            className\n                        )}\n                        style={Object.assign({}, defaultStyle, style)}\n                        {...props}\n                        ref={forwardedRef}\n                    >\n                        {children}\n                    </Tag>\n                );\n            }\n            Component.displayName = displayName;\n            return React.forwardRef((props, ref) => {\n                return <Component {...props} forwardedRef={ref} />;\n            });\n        }\n\n        const Component = (preProps) => {\n            const {\n                style = {},\n                className,\n    \n                children,\n                ...props\n            } = propMutator(preProps);\n            \n            return (\n                <Tag\n                    className={catClassName(\n                        (excludeComponentDefaultClassName ? '' : `y ${componentClassName}`),\n                        defaultClassName,\n                        className\n                    )}\n                    style={Object.assign({}, defaultStyle, style)}\n                    {...props}\n                >\n                    {children}\n                </Tag>\n            );\n        }\n        Component.displayName = displayName;\n        return Component;\n\n    }\n}\n\n\n//const camelCase = spacedString => spacedString.split(' ').map((word, i) => (i === 0 ? word[0].toLowerCase() : word[0].toUpperCase()) + word.slice(1).toLowerCase()).join('');\nconst pascalCase = spacedString => spacedString.split(' ').map((word) => word[0].toUpperCase() + word.slice(1).toLowerCase()).join('');\nconst kebabCase = spacedString => {\n    \n    const result = spacedString.split(' ').map((word, i) => (i === 0 ? '' : '-') + word.toLowerCase()).join('');\n    if(result.includes('undefined')) {\n        debugger;\n    }\n    return result;\n}\n\nexport const buildSimpleGenericThemableComponent = (\n    suffix,\n    {\n        Tag = 'div',\n        themeSelector = () => {},\n        propMutator = props => props,\n        forwardRef = false\n    } = {}\n    ) => buildGenericThemableComponent({\n        Tag,\n        componentClassName: kebabCase(suffix),\n        themeSelector,\n        displayName: pascalCase(suffix),\n        propMutator,\n        forwardRef\n});\n\nexport const getGenericThemableSubcomponentBuilder = (prefix, baseThemeSelector) => (\n    suffix = '', // TODO take vararg of suffixes\n    {\n        Tag = 'div',\n        themeSelector: subThemeSelector = () => {}, // TODO DEFAULT\n        propMutator = props => props,\n        forwardRef = false,\n        noPrefix = false\n    } = {}\n    ) => buildSimpleGenericThemableComponent(\n        `${noPrefix ? '' : prefix}${(suffix !== '' && !noPrefix) ? ' ' : ''}${suffix}`,\n        {\n            Tag,\n            themeSelector: suffix === ''\n                ? (globalTheme => baseThemeSelector(globalTheme) || {})\n                : (globalTheme => subThemeSelector(baseThemeSelector(globalTheme || {}) || {}) || {}),\n            propMutator,\n            forwardRef\n        }\n);\n\nexport default {\n    catClassName,\n    buildGenericThemableComponent\n}";function l(){return(l=Object.assign||function(e){for(var n=1;n<arguments.length;n++){var t=arguments[n];for(var r in t)Object.prototype.hasOwnProperty.call(t,r)&&(e[r]=t[r])}return e}).apply(this,arguments)}t.d(n,"_frontmatter",(function(){return c})),t.d(n,"default",(function(){return u}));var c={};void 0!==c&&c&&c===Object(c)&&Object.isExtensible(c)&&Object.defineProperty(c,"__filemeta",{configurable:!0,value:{name:"_frontmatter",filename:"util.mdx"}});var i={_frontmatter:c},p=a.a;function u(e){var n=e.components,t=function(e,n){if(null==e)return{};var t,r,a={},o=Object.keys(e);for(r=0;r<o.length;r++)t=o[r],n.indexOf(t)>=0||(a[t]=e[t]);return a}(e,["components"]);return Object(r.b)(p,l({},i,t,{components:n,mdxType:"MDXLayout"}),Object(r.b)("h1",{id:"utiljs"},"util.js"),Object(r.b)("p",null,"to avoid non react dependencies, these are just in a little util file"),Object(r.b)("h2",{id:"catclassname"},"catClassName"),Object(r.b)("p",null,"split arbitrary number of className strings on space, dedupe, space join"),Object(r.b)("h2",{id:"buildgenericthemablecomponent"},"buildGenericThemableComponent"),Object(r.b)("p",null,"with input of {tag, className, and themeSelector, and propMutator} build themable basic widget"),Object(r.b)("h2",{id:"getgenericthemablesubcomponentbuilder"},"getGenericThemableSubcomponentBuilder"),Object(r.b)("p",null,"bootstrap a subcomponent for use in a complex component"),Object(r.b)("h1",{id:"source"},"Source"),Object(r.b)(o.a,{source:s,mdxType:"SourceDisplay"}))}u&&u===Object(u)&&Object.isExtensible(u)&&Object.defineProperty(u,"__filemeta",{configurable:!0,value:{name:"MDXContent",filename:"util.mdx"}}),u.isMDXComponent=!0}}]);
//# sourceMappingURL=component---util-mdx-6a6f37564441da4f76f8.js.map