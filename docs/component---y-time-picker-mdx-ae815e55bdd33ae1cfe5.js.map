{"version":3,"sources":["webpack:///../src/YBasic/YSelect/subcomponents/YSelectMenu.js","webpack:///../src/YBasic/YSelect/YSelect.js","webpack:///../src/YBasic/YTimePicker/YTimePicker.js","webpack:///../src/YBasic/YTimePicker/YTimePicker.js?089c","webpack:///../YTimePicker.mdx","webpack:///../src/YBasic/YSelect/subcomponents/YSelectSVGs.js","webpack:///../src/YBasic/YSelect/subcomponents/YSelectDisplay.js","webpack:///../src/YBasic/YSelect/subcomponents/YSelectIndicator.js"],"names":["genSubcomponent","getGenericThemableSubcomponentBuilder","globalTheme","YSelectMenuOption","forwardRef","extraClassNames","Menu","undefined","MenuList","MenuEmpty","YSelectMenuComponent","yList","yEmpty","menuOpen","menuOptions","options","rest","menuNode","useRef","setPosition","useCallback","e","top","left","width","height","refAndPosition","node","useEffect","document","ref","YSelectMenu","YSelectComponent","yWrapper","yDisplay","yIndicators","yMenu","yOption","placeholder","clearable","searchable","noIndicators","selected","onChange","forwardedRef","Wrapper","useMemo","Stage","useState","setMenuOpen","searchString","setSearchString","kbIndex","setKbIndex","wrapperRef","inputRef","closeMenu","useClickOutsideHandler","filteredOptions","label","scrollBack","onArrow","eKey","setTimeout","lastIndex","nextIndex","option","keyHandlers","ArrowDown","ArrowUp","Enter","selectedValue","Escape","toggleMenu","clearSelection","value","className","i","data-value","onClick","key","onKeyDown","YSelect","YTimePickerStage","buildGenericThemableComponent","Tag","componentClassName","themeSelector","displayName","YTimePicker","military","Array","style","display","val","_frontmatter","layoutProps","MDXLayout","DefaultLayout","MDXContent","components","props","mdxType","__position","__code","__scope","Playground","SourceDisplay","source","isMDXComponent","clearablePath","dropdownPath","MultiValueButtonStage","MultiValueButton","MultiValueLabel","MultiValueRemove","MultiValueRemoveSVG","propMutator","viewBox","focusable","children","d","DisplayContainer","DisplayPlaceholder","DisplaySingleValue","DisplayInputWrapper","DisplayInputStage","DisplayInput","YSelectDisplayComponent","yPlaceholder","ySingleValue","yInputWrapper","yInputStage","yInput","yChild","tabindex","isMulti","o","Object","autoCapitalize","autoComplete","autoCorrect","spellCheck","tabIndex","type","aria-autocomplete","onFocus","opacity","YSelectDisplay","IndicatorContainer","IndicatorSeparator","IndicatorClearable","IndicatorClearableSVG","IndicatorDropdown","IndicatorDropdownSVG","YSelectIndicator","yClearable","yClearableSVG","ySeparator","yDropdown","yDropdownSVG","aria-label"],"mappings":"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","file":"component---y-time-picker-mdx-ae815e55bdd33ae1cfe5.js","sourcesContent":["import React, {useRef, useCallback, useEffect} from 'react';\nimport { getGenericThemableSubcomponentBuilder } from '../../../util.js';\nimport '../YSelectComponents.css';\nimport '../../../Y.css';\n\nconst genSubcomponent = getGenericThemableSubcomponentBuilder('y select menu', globalTheme => ((globalTheme.YBasic || {}).YSelect || {}));\n\nexport const YSelectMenuOption = genSubcomponent('option', {forwardRef: true, extraClassNames: ['padding']});\n\nconst Menu = genSubcomponent(undefined, {forwardRef: true});\nconst MenuList = genSubcomponent('list', {extraClassNames: ['padding']});\nconst MenuEmpty = genSubcomponent('empty', {extraClassNames: ['padding']});\n\nconst YSelectMenuComponent = ({\n    yList={},\n    yEmpty={},\n\n    menuOpen,\n    menuOptions,\n    options,\n    ...rest\n}) => {\n    const menuNode = useRef();\n\n    const setPosition = useCallback((e) => {\n        if(menuNode.current) {\n            if(!(e && e.target && e.target.parentNode && e.target.parentNode === menuNode.current)) { // skip scroll events inside menu\n                const { top, left, width, height } = menuNode.current.parentNode.getBoundingClientRect();\n                menuNode.current.style.top = (top + height) + 'px';\n                menuNode.current.style.left = (left) + 'px';\n                menuNode.current.style.width = width + 'px';\n            }\n        }\n    }, []);\n\n    const refAndPosition = useCallback(node => {\n        menuNode.current = node;\n        setPosition();\n    }, [setPosition])\n\n    useEffect(() => {\n        document.addEventListener('scroll', setPosition, true);\n        return () => {\n            document.removeEventListener('scroll', setPosition, true);\n        }\n    });\n\n    return (menuOpen && <Menu ref={refAndPosition} {...rest}>\n        <MenuList {...yList}>\n            {\n                menuOptions.length\n                    ? menuOptions\n                    : <MenuEmpty {...yEmpty}>{options.length ? 'No options match' : 'No options'}</MenuEmpty>\n            }\n        </MenuList>\n    </Menu>);\n}\n\nYSelectMenuComponent.displayName = 'YSelectMenuComponent';\nexport const YSelectMenu = YSelectMenuComponent;\n\nexport default YSelectMenu;","import React, { useState, useRef, useMemo, useCallback } from 'react';\nimport {getGenericThemableSubcomponentBuilder, useClickOutsideHandler} from '../../util.js';\nimport {YSelectDisplay} from './subcomponents/YSelectDisplay.js';\nimport {YSelectIndicator} from './subcomponents/YSelectIndicator.js';\nimport {YSelectMenu, YSelectMenuOption} from './subcomponents/YSelectMenu.js';\nimport './YSelectComponents.css';\nimport '../../Y.css';\n\nconst genSubcomponent = getGenericThemableSubcomponentBuilder('y select', globalTheme => ((globalTheme.YBasic || {}).YSelect || {}));\n\n/**\n * TODO LIST:\n * close menu on input ref blur\n */\n\nconst YSelectComponent = ({\n    yWrapper={},\n    yDisplay={},\n    yIndicators={},\n    yMenu: {yOption, ...yMenu}={},\n    \n    options = [],\n    placeholder = 'Select...',\n    clearable = true,\n    searchable = true,\n    noIndicators = false,\n    selected,\n    onChange,\n    forwardedRef,\n    ...rest\n}) => {\n\n    const Wrapper = useMemo(() => genSubcomponent('', {forwardRef: true}), []);\n    const Stage = useMemo(() => genSubcomponent('stage'), []);\n\n    const [menuOpen, setMenuOpen] = useState(false);\n    const [searchString, setSearchString] = useState('');\n    const [kbIndex, setKbIndex] = useState(null);\n\n    const wrapperRef = useRef();\n    const inputRef = useRef();\n\n    const closeMenu = () => {\n        setMenuOpen(false); setSearchString(''); setKbIndex(null);\n    }\n\n    useClickOutsideHandler(wrapperRef, useCallback(() => {\n        if(menuOpen) {\n            closeMenu();\n        }\n    }, [menuOpen]));\n\n    const filteredOptions = useMemo(\n        () => options.filter(({label}) => label.toLowerCase().includes(searchString.toLowerCase())),\n        [searchString, options]\n    );\n\n    const scrollBack = useCallback(\n        node => {\n            if(node !== null) {\n                if(node.scrollIntoViewIfNeeded) {\n                    node.scrollIntoViewIfNeeded();\n                } else {\n                    node.parentNode.scrollTop = node.offsetTop;\n                }\n            }\n        },\n        []\n    );\n\n    const onArrow = eKey => {\n        setTimeout(\n            () => setKbIndex(\n                lastIndex => {\n                    let nextIndex = 0;\n                    if(lastIndex !== null){\n                        if(eKey === 'ArrowDown') {\n                            nextIndex = lastIndex + 1;\n                        }\n                        if(eKey === 'ArrowUp') {\n                            nextIndex = lastIndex - 1;\n                        }\n                    } else if(selected !== null){\n                        nextIndex = filteredOptions.findIndex(option => option.value === selected)\n                    }\n                    if(nextIndex < 0) {\n                        nextIndex = filteredOptions.length - 1;\n                    }\n                    if(nextIndex >= filteredOptions.length) {\n                        nextIndex = 0;\n                    }\n                    return nextIndex;\n                }\n            ),\n            0\n        );\n    }\n\n    const keyHandlers = {\n        ArrowDown: onArrow,\n        ArrowUp: onArrow,\n        Enter: () => {\n            if(kbIndex !== null && kbIndex >= 0 && kbIndex < filteredOptions.length) {\n                const selectedValue = filteredOptions[kbIndex].value;\n                closeMenu();\n                if(selectedValue !== selected) {\n                    onChange(selectedValue);\n                }\n                inputRef.current && inputRef.current.blur();\n            } else {\n                setKbIndex(0);\n            }\n        },\n        Escape: () => {\n            closeMenu();\n        }\n    }\n    const onInputKeyDown = e => {\n        const eKey = e.key;\n        if(keyHandlers[eKey]) {\n            keyHandlers[eKey](eKey);\n            e.preventDefault();\n        }\n    }\n\n    const toggleMenu = () => {\n        if(menuOpen) {\n            closeMenu();\n        } else {\n            setMenuOpen(true);\n            inputRef.current && inputRef.current.focus();\n        }\n    }\n\n    const clearSelection = useCallback(() => {\n        const wasNull = selected === null;\n        if(!wasNull) {\n            onChange(null);\n        }\n    }, [selected, onChange]);\n\n    const onSearchStringChange = e => setSearchString(e.target.value);\n\n    const menuOptions = useMemo(\n        () => filteredOptions\n            .map(\n                ({value, label}, i) => (\n                <YSelectMenuOption\n                    {...yOption}\n                    className={(value === selected ? 'selected' : '') + (i === kbIndex ? ' highlighted' : '')}\n                    data-value={value} // I'm here for dev tool visibility\n                    onClick={() => {closeMenu(); selected !== value && onChange(value);}}\n                    key={`${value}-${i}`}\n                    {...(\n                        (selected, highlighted) => {\n                            if((selected && kbIndex === null) || highlighted) {\n                                return {ref: scrollBack};\n                            } else {\n                                return {}\n                            }\n                        })(value === selected, i === kbIndex)\n                    }\n                >\n                    {label}\n                </YSelectMenuOption>)),\n        [filteredOptions, kbIndex, onChange, selected, yOption, scrollBack]\n    );\n\n    return (\n        <Wrapper {...yWrapper} ref={wrapperRef}>\n            <Stage {...rest}>\n                <YSelectDisplay\n                    {...yDisplay}\n                    menuOpen={menuOpen}\n                    toggleMenu={toggleMenu}\n                    selected={selected}\n                    options={options}\n                    placeholder={placeholder}\n                    searchable={searchable}\n                    onChange={onSearchStringChange}\n                    onKeyDown={onInputKeyDown}\n                    searchString={searchString}\n                    ref={inputRef}\n                />\n                {!noIndicators && <YSelectIndicator\n                    {...yIndicators}\n                    selected={selected}\n                    clearable={clearable}\n                    clearSelection={clearSelection}\n                    toggleMenu={toggleMenu}\n                />}\n            </Stage>\n            <YSelectMenu\n                {...yMenu}\n                menuOpen={menuOpen}\n                menuOptions={menuOptions}\n                options={options}\n            />\n        </Wrapper>);\n\n}\nYSelectComponent.displayName = 'YSelect';\nexport const YSelect = YSelectComponent;\n\nexport default YSelect;","import React from 'react';\nimport '../../Y.css';\n\nimport { buildGenericThemableComponent } from '../../util.js';\nimport {YSelect} from '../YSelect/YSelect.js';\n\nexport const YTimePickerStage = buildGenericThemableComponent({\n    Tag: 'div',\n    componentClassName: 'y-time-picker',\n    themeSelector: (globalTheme) => (globalTheme.YBasic || {}).YTimePicker || {},\n    displayName: 'YTimePicker'\n});\n\n/**\n * TODO LIST\n * add indicator steppers to yselect\n * externalize DST transition disambiguation\n */\n\nexport const YTimePicker = ({\n    showHour,\n    hour,\n\n    showMinute,\n    minute,\n\n    showSecond,\n    second,\n\n    showMillisecond,\n    millisecond,\n\n    military = false,\n    showMilitary,\n\n    onChange\n}) => (\n    // FLEXIZE\n    <YTimePickerStage>\n        <YSelect\n            placeholder='hour'\n            noIndicators\n            options={Array(military ? 24: 12).fill().map((_, i) => ({value: i + 1, label: \"\"+(i + 1)}))}\n            style={{display: 'inline-block'}}\n        />\n        <YSelect\n            placeholder='minute'\n            noIndicators\n            options={Array(60).fill().map((_, i) => ({value: i, label: \"\"+i}))}\n            style={{display: 'inline-block'}}\n        />\n        <YSelect\n            placeholder='second'\n            noIndicators\n            options={Array(60).fill().map((_, i) => ({value: i, label: \"\"+i}))}\n            style={{display: 'inline-block'}}\n        />\n        {!military &&\n        <YSelect placeholder='AM/PM'\n            noIndicators\n            options={['AM', 'PM'].map(val => ({value: val, label: \"\"+val}))}\n            style={{display: 'inline-block'}}\n        />\n        }\n    </YTimePickerStage>\n)\n\nexport default YTimePicker;","export default \"import React from 'react';\\nimport '../../Y.css';\\n\\nimport { buildGenericThemableComponent } from '../../util.js';\\nimport {YSelect} from '../YSelect/YSelect.js';\\n\\nexport const YTimePickerStage = buildGenericThemableComponent({\\n    Tag: 'div',\\n    componentClassName: 'y-time-picker',\\n    themeSelector: (globalTheme) => (globalTheme.YBasic || {}).YTimePicker || {},\\n    displayName: 'YTimePicker'\\n});\\n\\n/**\\n * TODO LIST\\n * add indicator steppers to yselect\\n * externalize DST transition disambiguation\\n */\\n\\nexport const YTimePicker = ({\\n    showHour,\\n    hour,\\n\\n    showMinute,\\n    minute,\\n\\n    showSecond,\\n    second,\\n\\n    showMillisecond,\\n    millisecond,\\n\\n    military = false,\\n    showMilitary,\\n\\n    onChange\\n}) => (\\n    // FLEXIZE\\n    <YTimePickerStage>\\n        <YSelect\\n            placeholder='hour'\\n            noIndicators\\n            options={Array(military ? 24: 12).fill().map((_, i) => ({value: i + 1, label: \\\"\\\"+(i + 1)}))}\\n            style={{display: 'inline-block'}}\\n        />\\n        <YSelect\\n            placeholder='minute'\\n            noIndicators\\n            options={Array(60).fill().map((_, i) => ({value: i, label: \\\"\\\"+i}))}\\n            style={{display: 'inline-block'}}\\n        />\\n        <YSelect\\n            placeholder='second'\\n            noIndicators\\n            options={Array(60).fill().map((_, i) => ({value: i, label: \\\"\\\"+i}))}\\n            style={{display: 'inline-block'}}\\n        />\\n        {!military &&\\n        <YSelect placeholder='AM/PM'\\n            noIndicators\\n            options={['AM', 'PM'].map(val => ({value: val, label: \\\"\\\"+val}))}\\n            style={{display: 'inline-block'}}\\n        />\\n        }\\n    </YTimePickerStage>\\n)\\n\\nexport default YTimePicker;\"","import React from 'react'\n  /* @jsx mdx */\nimport { mdx } from '@mdx-js/react';\n/* @jsx mdx */\n\nimport DefaultLayout from \"/Users/thomas.coladonato/yeet-components/node_modules/gatsby-theme-docz/src/base/Layout.js\";\nimport { Playground } from 'docz';\nimport YTimePicker from './src/YBasic/YTimePicker/YTimePicker.js';\nimport SourceDisplay from './SourceDisplay';\nimport source from '!!raw-loader!./src/YBasic/YTimePicker/YTimePicker.js';\nexport const _frontmatter = {};\n\nconst makeShortcode = name => function MDXDefaultShortcode(props) {\n  console.warn(\"Component \" + name + \" was not imported, exported, or provided by MDXProvider as global scope\");\n  return <div {...props} />;\n};\n\nconst layoutProps = {\n  _frontmatter\n};\nconst MDXLayout = DefaultLayout;\nexport default function MDXContent({\n  components,\n  ...props\n}) {\n  return <MDXLayout {...layoutProps} {...props} components={components} mdxType=\"MDXLayout\">\n\n\n\n    <p>{`Quality: Survival`}</p>\n    <h1 {...{\n      \"id\": \"ytimepicker\"\n    }}>{`YTimePicker`}</h1>\n    <Playground __position={0} __code={'<YTimePicker />'} __scope={{\n      props,\n      DefaultLayout,\n      Playground,\n      YTimePicker,\n      SourceDisplay,\n      source\n    }} mdxType=\"Playground\">\n      <YTimePicker mdxType=\"YTimePicker\" />\n    </Playground>\n    <h1 {...{\n      \"id\": \"source\"\n    }}>{`Source`}</h1>\n    <SourceDisplay source={source} mdxType=\"SourceDisplay\" />\n\n    </MDXLayout>;\n}\n;\nMDXContent.isMDXComponent = true;\n      ","export const clearablePath = \"M14.348 14.849c-0.469 0.469-1.229 0.469-1.697 0l-2.651-3.030-2.651 3.029c-0.469 0.469-1.229 0.469-1.697 0-0.469-0.469-0.469-1.229 0-1.697l2.758-3.15-2.759-3.152c-0.469-0.469-0.469-1.228 0-1.697s1.228-0.469 1.697 0l2.652 3.031 2.651-3.031c0.469-0.469 1.228-0.469 1.697 0s0.469 1.229 0 1.697l-2.758 3.152 2.758 3.15c0.469 0.469 0.469 1.229 0 1.698z\";\nexport const dropdownPath = \"M4.516 7.548c0.436-0.446 1.043-0.481 1.576 0l3.908 3.747 3.908-3.747c0.533-0.481 1.141-0.446 1.574 0 0.436 0.445 0.408 1.197 0 1.615-0.406 0.418-4.695 4.502-4.695 4.502-0.217 0.223-0.502 0.335-0.787 0.335s-0.57-0.112-0.789-0.335c0 0-4.287-4.084-4.695-4.502s-0.436-1.17 0-1.615z\";","import React from 'react';\nimport { getGenericThemableSubcomponentBuilder } from '../../../util.js';\nimport { clearablePath } from './YSelectSVGs.js';\nimport '../YSelectComponents.css';\nimport '../../../Y.css';\n\nconst genSubcomponent = getGenericThemableSubcomponentBuilder('y select display', globalTheme => ((globalTheme.YBasic || {}).YSelect || {}));\n\nexport const MultiValueButtonStage = genSubcomponent('multi stage');\nexport const MultiValueButton = genSubcomponent('multi button');\nexport const MultiValueLabel = genSubcomponent('multi button label', {extraClassNames: ['padding']});\nexport const MultiValueRemove = genSubcomponent('multi button remove');\nexport const MultiValueRemoveSVG = genSubcomponent('multi button remove svg', {\n    Tag: 'svg',\n    propMutator: () => ({\n        height: '20px',\n        width: '20px',\n        viewBox: '0 0 20 20',\n        'aria-hidden': true,\n        focusable: false,\n        children: <path d={clearablePath}></path>\n    })\n});\n\nconst DisplayContainer = genSubcomponent('container', {extraClassNames: ['padding']});\nconst DisplayPlaceholder = genSubcomponent('placeholder');\nconst DisplaySingleValue = genSubcomponent('single value');\n\nconst DisplayInputWrapper = genSubcomponent('input wrapper', {extraClassNames: ['padding']});\nconst DisplayInputStage = genSubcomponent('input stage');\nconst DisplayInput = genSubcomponent('input', {Tag: 'input', forwardRef: true});\n\nconst YSelectDisplayComponent = ({\n    yPlaceholder={},\n    ySingleValue={},\n    yInputWrapper={},\n    yInputStage={},\n    yInput={},\n    yChild={},\n\n    menuOpen,\n    toggleMenu,\n    selected,\n    options,\n    placeholder,\n    searchable,\n    tabindex = \"0\",\n    searchString,\n    forwardedRef,\n    onChange,\n    onKeyDown,\n    ...rest\n}) => {\n    const isMulti = Array.isArray(selected);\n    return (<DisplayContainer\n        onClick={toggleMenu}\n        {...rest}\n    >\n        {isMulti && <MultiValueButtonStage>{\n            (selected || []).map(value => {\n                const option = options.filter(o => o.value === value)[0];\n                return (\n                    <MultiValueButton key={`v${value}`}>\n                        <MultiValueLabel>\n                            {option.label}\n                        </MultiValueLabel>\n                        <MultiValueRemove> {/* TODO */}\n                            <MultiValueRemoveSVG/>\n                        </MultiValueRemove>\n                    </MultiValueButton>\n                );\n            })}\n        </MultiValueButtonStage>}\n        \n        {!(searchable && menuOpen) &&\n            ((selected === null || (Array.isArray(selected) && selected.length === 0)\n            ? <DisplayPlaceholder\n                {...Object.assign({}, yChild, yPlaceholder)}\n            >\n                {placeholder}\n            </DisplayPlaceholder>\n            :  <DisplaySingleValue\n                    {...Object.assign({}, yChild, ySingleValue)}\n                >\n                    {(options.filter(o => o.value === selected)[0] || {}).label}\n                </DisplaySingleValue>\n                )\n        )}\n        <DisplayInputWrapper\n            {...yInputWrapper}\n        > \n            <DisplayInputStage\n                {...yInputStage}\n            >\n                <DisplayInput\n                    {...yInput}\n                    autoCapitalize='none'\n                    autoComplete='off'\n                    autoCorrect='off'\n                    spellCheck='false'\n                    tabIndex={tabindex}\n                    type='text'\n                    aria-autocomplete='list'\n                    value={searchString}\n                    ref={forwardedRef}\n                    onChange={onChange}\n                    onKeyDown={onKeyDown}\n                    onFocus={() => {\n                        if(!menuOpen) {\n                            toggleMenu();\n                        }\n                    }} \n                    onClick={(e) => {e.stopPropagation(); return false;}}\n                    style={{opacity: (searchable && menuOpen) ? '1' : '0'}}\n                ></DisplayInput>\n            </DisplayInputStage>\n        </DisplayInputWrapper>\n    </DisplayContainer>);\n}\n\nYSelectDisplayComponent.displayName = 'YSelectDisplayContainer';\nexport const YSelectDisplay = React.forwardRef((props, ref) => {\n    return <YSelectDisplayComponent {...props} forwardedRef={ref} />;\n});\n\nexport default YSelectDisplay;","import React from 'react';\nimport { getGenericThemableSubcomponentBuilder } from '../../../util.js';\nimport { clearablePath, dropdownPath } from './YSelectSVGs.js';\nimport '../YSelectComponents.css';\nimport '../../../Y.css';\n\nconst genSubcomponent = getGenericThemableSubcomponentBuilder('y select indicator', globalTheme => ((globalTheme.YBasic || {}).YSelect || {}));\n\nconst IndicatorContainer = genSubcomponent('container');\nconst IndicatorSeparator = genSubcomponent('separator');\nconst IndicatorClearable = genSubcomponent('clearable', {Tag: 'button', extraClassNames: ['padding']});\nconst IndicatorClearableSVG = genSubcomponent('clearable svg', {\n    Tag: 'svg',\n    propMutator: () => ({\n        height: '20px',\n        width: '20px',\n        viewBox: '0 0 20 20',\n        'aria-hidden': true,\n        focusable: false,\n        children: <path d={clearablePath}></path>\n    })\n});\nconst IndicatorDropdown = genSubcomponent('dropdown', {Tag: 'button', extraClassNames: ['padding']});\nconst IndicatorDropdownSVG = genSubcomponent('dropdown svg', {\n    Tag: 'svg',\n    propMutator: () => ({\n        height: '20px',\n        width: '20px',\n        viewBox: '0 0 20 20',\n        'aria-hidden': true,\n        focusable: false,\n        children: <path d={dropdownPath}></path>\n    })\n});\n\nexport const YSelectIndicator = ({\n    yClearable={},\n    yClearableSVG={},\n    ySeparator={},\n    yDropdown={},\n    yDropdownSVG={},\n\n    selected,\n    clearable,\n    clearSelection,\n    toggleMenu,\n    ...rest\n}) => (<IndicatorContainer {...rest}>\n    {clearable && (selected !== null) && <IndicatorClearable\n        {...yClearable}\n        onClick={clearSelection}\n        aria-label='clear selection'\n    >\n        <IndicatorClearableSVG {...yClearableSVG}/>\n    </IndicatorClearable>\n    }\n    <IndicatorSeparator {...ySeparator}/>\n    <IndicatorDropdown {...yDropdown} onClick={toggleMenu} aria-label='open menu'>\n        <IndicatorDropdownSVG {...yDropdownSVG}/>\n    </IndicatorDropdown>\n</IndicatorContainer>);\n\nexport default YSelectIndicator;"],"sourceRoot":""}