{"version":3,"sources":["webpack:///../src/YBasic/YTableComponents/YTable.js?2483","webpack:///../YTableComponents.mdx","webpack:///../FunctionChild.js","webpack:///../src/YBasic/YTableComponents/YTable.js"],"names":["_frontmatter","layoutProps","MDXLayout","DefaultLayout","MDXContent","components","props","mdxType","__position","__code","__scope","useState","useRef","FunctionChild","Playground","YTable","YThead","YTr","YTh","YTbody","YTd","YThSortIndicator","SourceDisplay","source","sort","undefined","sortClass","setSortClass","resizable","onClick","nextSort","a","b","key","current","className","prefix","map","elem","suffix","i","isMDXComponent","children","genSubcomponent","getGenericThemableSubcomponentBuilder","globalTheme","Tag","propMutator","style","Object","resize"],"mappings":"oNAAe,k3B,oSCYR,IAAMA,EAAe,Q,qKAE5B,IAKMC,EAAc,CAClBD,gBAEIE,EAAYC,IACH,SAASC,EAAT,GAGZ,IAFDC,EAEC,EAFDA,WACGC,E,oIACF,mBACD,OAAO,YAACJ,EAAD,KAAeD,EAAiBK,EAAhC,CAAuCD,WAAYA,EAAYE,QAAQ,cAI5E,gDACA,iBAAQ,CACN,GAAM,oBADR,oBAGA,iIACA,6EACA,YAAC,IAAD,CAAYC,WAAY,EAAGC,OAAQ,olDAA+mDC,QAAS,CACzpDJ,QACAH,kBACAQ,oBACAC,gBACAC,kBACAC,eACAC,WACAC,WACAC,QACAC,QACAC,WACAC,QACAC,qBACAC,kBACAC,UACChB,QAAQ,cACT,YAACM,EAAA,EAAD,CAAeN,QAAQ,kBACpB,WAIC,IAAMiB,EAAOZ,sBAAOa,GAJf,EAK6Bd,mBAAS,IAApCe,EALF,KAKaC,EALb,KAML,OAAO,8BACT,YAACZ,EAAA,EAAD,CAAQR,QAAQ,UACZ,YAAC,IAAD,CAAQA,QAAQ,UACZ,YAAC,IAAD,CAAKA,QAAQ,OACT,YAAC,IAAD,CAAKqB,WAAW,EAAMrB,QAAQ,OAA9B,QAEI,YAAC,IAAD,CAAkBsB,QAAS,WAC7B,IAAMC,EAAyB,SAAdJ,EAAuB,SAACK,EAAGC,GAAJ,OAAUA,EAAEC,IAAMF,EAAEE,KAAM,SAACF,EAAGC,GAAJ,OAAUD,EAAEE,IAAMD,EAAEC,KACtFT,EAAKU,QAAUJ,EACfH,EAA2B,SAAdD,EAAuB,MAAQ,SAC3CS,UAAWT,EAAWnB,QAAQ,sBAEjC,YAAC,IAAD,CAAKA,QAAQ,OAAb,SAGA,YAAC,IAAD,CAAKA,QAAQ,OAAb,SAGA,YAAC,IAAD,CAAKA,QAAQ,OAAb,WAKR,YAAC,IAAD,CAAQA,QAAQ,UACX,CAAC,CACA0B,IAAK,EACLG,OAAQ,KACP,CACDH,IAAK,GACLG,OAAQ,KACP,CACDH,IAAK,EACLG,OAAQ,KACP,CACDH,IAAK,GACLG,OAAQ,MACPZ,KAAKA,EAAKU,SAASG,KAAI,SAAAC,GAAI,OAAI,YAAC,IAAD,CAAKL,IAAKK,EAAKL,IAAK1B,QAAQ,OACrD,CAAC,MAAO,MAAO,MAAO,OAAO8B,KAAI,SAACE,EAAQC,GAAT,OAAe,YAAC,IAAD,CAAKP,IAAKM,EAASC,EAAGjC,QAAQ,OAAa,IAANiC,EAAUF,EAAKL,IAAMK,EAAKF,OAASG,iBAQ7I,iBAAQ,CACN,GAAM,UADR,UAGA,YAACjB,EAAA,EAAD,CAAeC,OAAQA,EAAQhB,QAAQ,mB,4JAK3CH,EAAWqC,gBAAiB,G,4DChHb,gBAAiB,IAAfC,EAAc,EAAdA,SACb,OAAO,8BAAGA,O,oqBCAd,IAAMC,EAAkBC,YAAsC,KAAK,SAAAC,GAAW,OAAMA,UAAD,YAAL,MAEjE9B,EAAS4B,EAAgB,QAAS,CAACG,IAAK,e,qWAC9C,IAAM3B,EAASwB,EAAgB,QAAS,CAACG,IAAK,e,qWAC9C,IAAM1B,EAAMuB,EAAgB,KAAM,CAACG,IAAK,Y,+VACxC,IAAM5B,EAAMyB,EAAgB,KAAM,CAACG,IAAD,KACrCC,YACI,0BAAEC,OAAF,yBAAcpB,OAAd,SAAoCtB,E,oIAApC,iC,+UAAA,EACE0C,MAAOC,OAAA,YAAyB,CAACC,OAAQtB,EAAS,aAAiBoB,EAAME,UAD3E,W,+VAGD,IAAMlC,EAAS2B,EAAgB,QAAS,CAACG,IAAK,e,qWAC9C,IAAMzB,EAAmBsB,EAAzB,0B,yXACA,IAAM1B,EAAM0B,EAAgB,KAAM,CAACG,IAAK,Y","file":"component---y-table-components-mdx-a5162e347ddd287a8a44.js","sourcesContent":["export default \"import { getGenericThemableSubcomponentBuilder } from '../../util.js';\\nimport './YTableComponents.css';\\n\\nconst genSubcomponent = getGenericThemableSubcomponentBuilder('y', globalTheme => ((globalTheme.YBasic || {}).YTable || {}));\\n\\nexport const YTable = genSubcomponent('table', {Tag: 'table'});\\nexport const YTbody = genSubcomponent('tbody', {Tag: 'tbody'});\\nexport const YTd = genSubcomponent('td', {Tag: 'td'});\\nexport const YTh = genSubcomponent('th', {Tag: 'th',\\n    propMutator:\\n        ({style = {}, resizable = false, ...props}) =>\\n        ({style: Object.assign({}, style, {resize: resizable ? 'horizontal': style.resize}), ...props})\\n});\\nexport const YThead = genSubcomponent('thead', {Tag: 'thead'});\\nexport const YThSortIndicator = genSubcomponent('th sort indicator');\\nexport const YTr = genSubcomponent('tr', {Tag: 'tr'});\\n\\nexport default YTable;\"","import React from 'react'\n  /* @jsx mdx */\nimport { mdx } from '@mdx-js/react';\n/* @jsx mdx */\n\nimport DefaultLayout from \"/Users/thomas.coladonato/yeet-components/node_modules/gatsby-theme-docz/src/base/Layout.js\";\nimport { useState, useRef } from 'react';\nimport FunctionChild from './FunctionChild.js';\nimport { Playground } from 'docz';\nimport { YTable, YThead, YTr, YTh, YTbody, YTd, YThSortIndicator } from './src/YBasic/YTableComponents/YTable.js';\nimport SourceDisplay from './SourceDisplay';\nimport source from '!!raw-loader!./src/YBasic/YTableComponents/YTable.js';\nexport const _frontmatter = {};\n\nconst makeShortcode = name => function MDXDefaultShortcode(props) {\n  console.warn(\"Component \" + name + \" was not imported, exported, or provided by MDXProvider as global scope\");\n  return <div {...props} />;\n};\n\nconst layoutProps = {\n  _frontmatter\n};\nconst MDXLayout = DefaultLayout;\nexport default function MDXContent({\n  components,\n  ...props\n}) {\n  return <MDXLayout {...layoutProps} {...props} components={components} mdxType=\"MDXLayout\">\n\n\n\n    <p>{`Quality: Sophistication`}</p>\n    <h1 {...{\n      \"id\": \"ytablecomponents\"\n    }}>{`YTableComponents`}</h1>\n    <p>{`these are just regular table components with some default class names that set up some default stylings.`}</p>\n    <p>{`this has an example sortability on the first column.`}</p>\n    <Playground __position={0} __code={'<FunctionChild>\\n  {() => {\\n    {\\n      /* const [sort, setSort] = useState(undefined); */\\n    }\\n    const sort = useRef(undefined)\\n    const [sortClass, setSortClass] = useState(\\'\\')\\n    return (\\n      <>\\n        <YTable>\\n          <YThead>\\n            <YTr>\\n              <YTh resizable={true}>\\n                Col A\\n                <YThSortIndicator\\n                  onClick={() => {\\n                    const nextSort =\\n                      sortClass === \\'desc\\'\\n                        ? (a, b) => b.key - a.key\\n                        : (a, b) => a.key - b.key\\n                    sort.current = nextSort\\n                    setSortClass(sortClass === \\'desc\\' ? \\'asc\\' : \\'desc\\')\\n                  }}\\n                  className={sortClass}\\n                />\\n              </YTh>\\n              <YTh>Col B</YTh>\\n              <YTh>Col C</YTh>\\n              <YTh>Col D</YTh>\\n            </YTr>\\n          </YThead>\\n          <YTbody>\\n            {[\\n              { key: 3, prefix: \\'B\\' },\\n              { key: 73, prefix: \\'Z\\' },\\n              { key: 1, prefix: \\'B\\' },\\n              { key: 22, prefix: \\'Z\\' },\\n            ]\\n              .sort(sort.current)\\n              .map(elem => (\\n                <YTr key={elem.key}>\\n                  {[\\'EEP\\', \\'OOP\\', \\'EEP\\', \\'OOP\\'].map((suffix, i) => (\\n                    <YTd key={suffix + i}>\\n                      {i === 0 ? elem.key : elem.prefix + suffix}\\n                    </YTd>\\n                  ))}\\n                </YTr>\\n              ))}\\n          </YTbody>\\n        </YTable>\\n      </>\\n    )\\n  }}\\n</FunctionChild>'} __scope={{\n      props,\n      DefaultLayout,\n      useState,\n      useRef,\n      FunctionChild,\n      Playground,\n      YTable,\n      YThead,\n      YTr,\n      YTh,\n      YTbody,\n      YTd,\n      YThSortIndicator,\n      SourceDisplay,\n      source\n    }} mdxType=\"Playground\">\n      <FunctionChild mdxType=\"FunctionChild\">\n        {() => {\n          {\n            /* const [sort, setSort] = useState(undefined); */\n          }\n          const sort = useRef(undefined);\n          const [sortClass, setSortClass] = useState('');\n          return <>\n        <YTable mdxType=\"YTable\">\n            <YThead mdxType=\"YThead\">\n                <YTr mdxType=\"YTr\">\n                    <YTh resizable={true} mdxType=\"YTh\">\n                        Col A\n                        <YThSortIndicator onClick={() => {\n                      const nextSort = sortClass === 'desc' ? (a, b) => b.key - a.key : (a, b) => a.key - b.key;\n                      sort.current = nextSort;\n                      setSortClass(sortClass === 'desc' ? 'asc' : 'desc');\n                    }} className={sortClass} mdxType=\"YThSortIndicator\" />\n                    </YTh>\n                    <YTh mdxType=\"YTh\">\n                        Col B\n                    </YTh>\n                    <YTh mdxType=\"YTh\">\n                        Col C\n                    </YTh>\n                    <YTh mdxType=\"YTh\">\n                        Col D\n                    </YTh>\n                </YTr>\n            </YThead>\n            <YTbody mdxType=\"YTbody\">\n                {[{\n                  key: 3,\n                  prefix: 'B'\n                }, {\n                  key: 73,\n                  prefix: 'Z'\n                }, {\n                  key: 1,\n                  prefix: 'B'\n                }, {\n                  key: 22,\n                  prefix: 'Z'\n                }].sort(sort.current).map(elem => <YTr key={elem.key} mdxType=\"YTr\">\n                        {['EEP', 'OOP', 'EEP', 'OOP'].map((suffix, i) => <YTd key={suffix + i} mdxType=\"YTd\">{i === 0 ? elem.key : elem.prefix + suffix}</YTd>)}\n                    </YTr>)}\n            </YTbody>\n        </YTable>\n    </>;\n        }}\n      </FunctionChild>\n    </Playground>\n    <h1 {...{\n      \"id\": \"source\"\n    }}>{`Source`}</h1>\n    <SourceDisplay source={source} mdxType=\"SourceDisplay\" />\n\n    </MDXLayout>;\n}\n;\nMDXContent.isMDXComponent = true;\n      ","import React from 'react';\n\nexport default ({children}) => {\n    return <>{children()}</>;\n}","import { getGenericThemableSubcomponentBuilder } from '../../util.js';\nimport './YTableComponents.css';\n\nconst genSubcomponent = getGenericThemableSubcomponentBuilder('y', globalTheme => ((globalTheme.YBasic || {}).YTable || {}));\n\nexport const YTable = genSubcomponent('table', {Tag: 'table'});\nexport const YTbody = genSubcomponent('tbody', {Tag: 'tbody'});\nexport const YTd = genSubcomponent('td', {Tag: 'td'});\nexport const YTh = genSubcomponent('th', {Tag: 'th',\n    propMutator:\n        ({style = {}, resizable = false, ...props}) =>\n        ({style: Object.assign({}, style, {resize: resizable ? 'horizontal': style.resize}), ...props})\n});\nexport const YThead = genSubcomponent('thead', {Tag: 'thead'});\nexport const YThSortIndicator = genSubcomponent('th sort indicator');\nexport const YTr = genSubcomponent('tr', {Tag: 'tr'});\n\nexport default YTable;"],"sourceRoot":""}